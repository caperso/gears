{"version":3,"sources":["components/code-paper/CodePaper.tsx","components/ContextMenu/index.tsx","components/image-preview/ImagePreview.tsx","components/image-preview/demo.tsx","components/levels/OneLevel.tsx","components/levels/Levels.tsx","components/levels/demo.tsx","components/loading/index.tsx","pages/Component/index.tsx","pages/Home/index.tsx","config/index.ts","components/code-paper/demo.tsx","components/loading/demo.tsx","pages/NotFound/index.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/image/panda.png"],"names":["CodePaper","props","textarea","useRef","className","ref","defaultValue","text","handleClick","onClick","current","value","buttonText","ContextMenu","menu","children","useState","x","y","cursorPoint","setCursorPoint","showContextMenu","setShowContextMenu","style","position","left","top","backgroundColor","borderRadius","e","stopPropagation","onContextMenu","preventDefault","clientX","clientY","emptyImageProps","w","h","r","s","l","t","centerX","centerY","wStatic","hStatic","rotateTime","ImagePreview","url","fixed","visible","onClose","imageState","setImageState","imageLoadedState","setImageLoadedState","image","imageStyle","cursor","width","height","transform","useEffect","disablePassiveWheelEvent","document","addEventListener","passive","enablePassiveWheelEvent","removeEventListener","reset","setControlMode","setRotatable","setDraggable","close","changeMode","controlMode","mode","distToImageBoundary","setDistToImageBoundary","draggable","rotatable","pointA","setPointA","onMouseDown","offsetLeft","offsetTop","startMove","startRotate","onMouseMove","dragging","pointB","getLine","point1","point2","Math","sqrt","pow","abs","getBoundingClientRect","pointO","right","bottom","a","b","c","cosO","degree","acos","matrix","direct","rotating","onMouseUp","endRotate","onLoad","changedState","node","window","innerWidth","innerHeight","wMax","hMax","wOrigin","naturalWidth","hOrigin","naturalHeight","wRatio","hRatio","size","finalState","sizing","src","alt","onWheel","scaleDelta","deltaY","relativePoint","lastLeft","lastTop","everRotated","state","OneLevel","level","depth","route","location","pathname","match","active","setActive","replaceRoute","replace","changeRoute","console","log","key","name","classNameGenerator","item","static","activeLevel","color","undefined","paddingLeft","Levels","data","fontSize","map","recursiveRender","lastRoute","deep","deepItem","levels","Loading","Component","routes","RouteWithSubRoutes","Meta","routeConfig","icon","title","exact","component","hour","Date","getHours","hello","span","avatar","marginTop","img","description","length","inMenu","path","showDefault","setShowDefault","showWebImage","setShowWebImage","webImageUrl","setWebImageUrl","localStorage","getItem","setItem","levelData","setLevelData","JSON","stringify","parse","error","message","info","NotFound","Header","Sider","Content","SubMenu","render","withRouter","collapsed","setCollapsed","toggle","menuTitle","routeItem","SettingTwoTone","trigger","reverseArrow","collapsible","theme","defaultSelectedKeys","defaultOpenKeys","subItem","Item","to","CheckCircleTwoTone","background","padding","MenuUnfoldOutlined","MenuFoldOutlined","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f056d050.chunk.js","sourcesContent":["import { Button } from 'antd';\nimport React, { useRef } from 'react';\nimport './index.scss';\ninterface Props {\n    text: string;\n    buttonText?: string;\n    className?: string;\n    handleClick?: (text: string) => void;\n}\n\nexport const CodePaper = (props: Props) => {\n    const textarea = useRef<HTMLTextAreaElement>(null);\n    const updateChanges = () => {\n        const text = textarea.current!.value;\n        if (props.handleClick) {\n            props.handleClick(text);\n        }\n    };\n    return (\n        <div className=\"g-code-paper-wrapper\">\n            <textarea ref={textarea} defaultValue={props.text} className={`g-code-paper-textarea ${props.className}`} />\n            {props.handleClick && <Button onClick={updateChanges}>{props.buttonText ? props.buttonText : '更新数据'}</Button>}\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport { AxisPoint } from 'typings/types';\n\ninterface Props {\n    menu: React.ReactNode;\n    children: React.ReactNode;\n}\nexport const ContextMenu = (props: Props) => {\n    const { menu, children } = props;\n\n    const [cursorPoint, setCursorPoint] = useState<AxisPoint>({ x: 0, y: 0 });\n    const [showContextMenu, setShowContextMenu] = useState(false);\n\n    const style: React.CSSProperties = {\n        position: 'fixed',\n        left: cursorPoint.x,\n        top: cursorPoint.y,\n        backgroundColor: 'white',\n        borderRadius: '4px',\n    };\n    /* 右键菜单 */\n\n    const openMenu = (e: React.MouseEvent) => {\n        e.preventDefault();\n        setCursorPoint({ x: e.clientX, y: e.clientY });\n        setShowContextMenu(true);\n    };\n    const handleClick = (e: React.MouseEvent) => {\n        setShowContextMenu(false);\n        e.stopPropagation();\n    };\n\n    return (\n        <div onClick={handleClick} onContextMenu={openMenu}>\n            {children}\n            {showContextMenu && <div style={style}>{menu}</div>}\n        </div>\n    );\n};\n","import { ContextMenu } from 'components/ContextMenu';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { AxisPoint, ImageControlMode } from 'typings/types';\nimport './index.scss';\n\ninterface IProps {\n    url: string;\n    fixed?: boolean;\n    visible?: boolean;\n    children?: React.ReactNode;\n    onClose?: () => void;\n}\nconst emptyImageProps = {\n    w: 0, // width\n    h: 0, // height\n    r: 0, // rotate\n    s: 1, // scale\n    l: 0, // left\n    t: 0, // top\n    centerX: 0,\n    centerY: 0,\n    wStatic: 0,\n    hStatic: 0,\n    rotateTime: 0, // 旋转的次数\n};\n\nexport function ImagePreview(this: any, props: IProps) {\n    const { url, children = null, fixed = true, visible, onClose } = props;\n\n    const [imageState, setImageState] = useState(emptyImageProps);\n\n    const [imageLoadedState, setImageLoadedState] = useState(emptyImageProps);\n\n    let image = useRef<HTMLImageElement>(null);\n\n    const imageStyle: React.CSSProperties = {\n        cursor: `move`,\n        position: `absolute`,\n        left: `${imageState.l}px`,\n        top: `${imageState.t}px`,\n        width: `${imageState.w}px`,\n        height: `${imageState.h}px`,\n        transform: `translate(-50%, -50%) rotate(${imageState.r}deg) scale(${imageState.s}, ${imageState.s})`,\n    };\n\n    // 禁用document滚轮防止意外滚动\n    useEffect(() => {\n        const disablePassiveWheelEvent = () =>\n            document.addEventListener(\n                'wheel',\n                function(e) {\n                    e.preventDefault();\n                },\n                { passive: false },\n            );\n        const enablePassiveWheelEvent = () => document.removeEventListener<'wheel'>('wheel', disablePassiveWheelEvent);\n        if (visible) {\n            disablePassiveWheelEvent();\n        } else {\n            enablePassiveWheelEvent();\n        }\n        return enablePassiveWheelEvent;\n    }, [visible]);\n\n    /**\n     * 调整图片至遮罩的中心, 等比缩放图片, 避免屏幕裁剪\n     * @param {HTMLImageElement} node\n     * @returns\n     */\n    const sizing = (node: HTMLImageElement) => {\n        const l = window.innerWidth / 2;\n        const t = window.innerHeight / 2;\n\n        const wMax = window.innerWidth * 0.9;\n        const hMax = window.innerHeight * 0.9 - 100; // 100为底部功能栏高度保留\n\n        const wOrigin = node.naturalWidth; // 初始的图片宽\n        const hOrigin = node.naturalHeight; // 初始的图片高度\n\n        const wRatio = wOrigin / wMax;\n        const hRatio = hOrigin / hMax;\n\n        const size =\n            wRatio < 1 && hRatio < 1\n                ? { w: wOrigin, h: hOrigin }\n                : wRatio > hRatio\n                ? { w: wMax, h: hOrigin / wRatio }\n                : { w: wOrigin / hRatio, h: hMax };\n\n        const changedState = { t, l, w: size.w, h: size.h, wStatic: size.w, hStatic: size.h };\n        const finalState = { ...imageState, ...changedState };\n        setImageState(finalState);\n        return finalState;\n    };\n\n    /* 初始化容器大小 */\n    const handleImageLoaded = () => {\n        if (image.current) {\n            const changedState = sizing(image.current);\n            setImageLoadedState(changedState);\n        }\n    };\n\n    /* 放大 */\n    const zoomIn = (e: React.MouseEvent) => {\n        setImageState(state => ({ ...state, w: imageState.w * 1.05, h: imageState.h * 1.05 }));\n    };\n\n    /* 缩小 */\n    const zoomOut = (e: React.MouseEvent) => {\n        setImageState(state => ({ ...state, w: imageState.w * 0.95, h: imageState.h * 0.95 }));\n    };\n\n    /* 旋转 */\n    const rotate = (e: React.MouseEvent) => {\n        setImageState(s => ({ ...s, r: s.r + 90, rotateTime: ++s.rotateTime }));\n    };\n\n    /* 重置 */\n    const reset = () => {\n        setControlMode('drag');\n        setRotatable(false);\n        setDraggable(false);\n        setImageState(imageLoadedState);\n    };\n\n    /* 关闭预览 */\n    const close = (e: React.MouseEvent) => {\n        reset();\n        if (onClose) {\n            onClose();\n        }\n    };\n\n    /* 特殊行为 */\n\n    /* 滚轮缩放 */\n    const toScale = (e: React.WheelEvent) => {\n        let scaleDelta = e.deltaY < 0 ? +0.05 : -0.05;\n\n        // 捕获鼠标在图片位置\n        const relativePoint: AxisPoint = { x: e.clientX - imageState.l, y: e.clientY - imageState.t };\n\n        // 缩放宽高\n        let w = imageState.w * (1 + scaleDelta);\n        let h = imageState.h * (1 + scaleDelta);\n\n        // 原有的偏移量\n        let lastLeft = imageState.l;\n        let lastTop = imageState.t;\n\n        // 保持缩放后坐标点与鼠标坐标点重合\n        let l = lastLeft - scaleDelta * relativePoint.x;\n        let t = lastTop - scaleDelta * relativePoint.y;\n        setImageState(s => {\n            const updateState = { ...s, w, h, l, t, everRotated: false };\n            return updateState;\n        });\n    };\n\n    // 右键菜单: 模式切换\n    const menu = (\n        <div>\n            <p onClick={() => changeMode('rotate')}>自由旋转</p>\n            <p onClick={() => changeMode('drag')}>自由拖拽</p>\n            <p onClick={void 0}>下载图片</p>\n        </div>\n    );\n\n    const [controlMode, setControlMode] = useState<ImageControlMode>('drag');\n\n    const changeMode = (mode: ImageControlMode) => setControlMode(mode);\n\n    /* 拖拽 */\n    const [distToImageBoundary, setDistToImageBoundary] = useState<AxisPoint>({ x: 0, y: 0 });\n    const [draggable, setDraggable] = useState(false);\n\n    // 拖拽开始\n    const startMove = (e: React.MouseEvent) => {\n        e.preventDefault();\n        setDraggable(true);\n        setDistToImageBoundary({ x: e.clientX - image.current!.offsetLeft, y: e.clientY - image.current!.offsetTop });\n    };\n\n    // 拖拽移动\n    const dragging = function(e: React.MouseEvent) {\n        if (!draggable) {\n            return;\n        }\n        let l = e.clientX - distToImageBoundary.x;\n        let t = e.clientY - distToImageBoundary.y;\n        setImageState(s => ({ ...s, l, t }));\n    };\n\n    // 拖拽结束\n    const endMove = function(e: React.MouseEvent) {\n        setDraggable(false);\n    };\n\n    /* 自由旋转 */\n    const [rotatable, setRotatable] = useState(false);\n    const [pointA, setPointA] = useState<AxisPoint>({ x: 0, y: 0 });\n    const startRotate = function(e: React.MouseEvent) {\n        e.preventDefault();\n        setPointA({ x: e.clientX, y: e.clientY });\n        setRotatable(true);\n    };\n\n    const rotating = function(e: React.MouseEvent) {\n        if (!rotatable) {\n            return;\n        }\n\n        const pointB = { x: e.clientX, y: e.clientY };\n\n        const getLine = (point1: AxisPoint, point2: AxisPoint): number =>\n            Math.sqrt(Math.pow(Math.abs(point1.x - point2.x), 2) + Math.pow(Math.abs(point1.y - point2.y), 2));\n\n        const { left, right, top, bottom } = image.current!.getBoundingClientRect();\n        const pointO = { x: (left + right) / 2, y: (top + bottom) / 2 };\n        const a = getLine(pointB, pointA);\n        const b = getLine(pointB, pointO);\n        const c = getLine(pointA, pointO);\n\n        let cosO = (b * b + c * c - a * a) / (2 * b * c);\n        let degree = (Math.acos(cosO) * 180) / 3.1415;\n\n        // 求向量积\n        let matrix = [\n            [pointA.x - pointO.x, pointB.x - pointO.x],\n            [pointA.y - pointO.y, pointB.y - pointO.y],\n        ];\n        let direct = matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0] >= 0 ? +1 : -1;\n\n        setImageState(s => ({ ...s, r: s.r + direct * degree }));\n        setPointA(pointB);\n    };\n\n    const endRotate = function(e: React.MouseEvent) {\n        setPointA({ x: e.clientX, y: e.clientY });\n        setRotatable(false);\n    };\n\n    const handleMouseDown = (e: React.MouseEvent) => {\n        controlMode === 'drag' ? startMove(e) : startRotate(e);\n    };\n\n    const handleMouseMove = (e: React.MouseEvent) => {\n        controlMode === 'drag' ? dragging(e) : rotating(e);\n    };\n\n    const handleMouseUp = (e: React.MouseEvent) => {\n        controlMode === 'drag' ? endMove(e) : endRotate(e);\n    };\n\n    if (!visible) {\n        return <></>;\n    }\n\n    return (\n        <div className={`g-image-preview-wrapper ${fixed ? 'g-fixed-wrapper' : ''}`} onClick={fixed ? close : void 0}>\n            {children}\n            <div className=\"g-image-preview-close\" onClick={close}>\n                X\n            </div>\n            <ContextMenu menu={menu}>\n                <img\n                    className={`g-image-preview-image ${fixed ? 'g-image-preview-image-fixed' : ''}`}\n                    onMouseDown={handleMouseDown}\n                    onMouseMove={handleMouseMove}\n                    onMouseUp={handleMouseUp}\n                    onClick={e => e.stopPropagation()} // 遗漏了这里阻止冒泡\n                    style={imageStyle}\n                    onLoad={handleImageLoaded}\n                    ref={image}\n                    src={url}\n                    alt=\"图片\"\n                    onWheel={toScale}\n                />\n            </ContextMenu>\n            <div className=\"g-image-preview-action-bar\" onClick={e => e.stopPropagation()}>\n                <i className=\"g-action\" onClick={zoomIn}>\n                    +\n                </i>\n                <i className=\"g-action\" onClick={zoomOut}>\n                    -\n                </i>\n                <i className=\"g-action\" onClick={rotate}>\n                    ROTATE\n                </i>\n                <i className=\"g-action\" onClick={reset}>\n                    RESET\n                </i>\n            </div>\n        </div>\n    );\n}\n","import { CodePaper } from 'components/code-paper/CodePaper';\nimport React, { useEffect, useState } from 'react';\nimport img from '../../assets/image/panda.png';\nimport './demo.scss';\nimport { ImagePreview } from './ImagePreview';\n\nexport const ImagePreviewDemo = () => {\n    const [showDefault, setShowDefault] = useState(false);\n    const [showWebImage, setShowWebImage] = useState(false);\n    const [webImageUrl, setWebImageUrl] = useState('');\n\n    const showDefaultModal = () => {\n        setShowDefault(true);\n    };\n\n    const showModal = (text: string) => {\n        if (text) {\n            setWebImageUrl(text);\n            localStorage.setItem('image-preview-url', text);\n        }\n        setShowWebImage(true);\n    };\n\n    const closeDefaultPreview = () => {\n        setShowDefault(false);\n    };\n\n    const closePreview = () => {\n        setShowWebImage(false);\n    };\n\n    // 加载本地缓存url\n    useEffect(() => {\n        const text = localStorage.getItem('image-preview-url');\n        if (text) {\n            setWebImageUrl(text);\n        }\n    }, []);\n\n    return (\n        <div>\n            <h3>组件名称：图片预览（ImagePreview）</h3>\n            <h4>基础操作: 滚轮缩放 旋转 重置</h4>\n            <br/>\n            <h4>示例图片</h4>\n\n            <img src={img} alt=\"图片\" onClick={showDefaultModal}></img>\n            <ImagePreview url={img} fixed={true} visible={showDefault} onClose={closeDefaultPreview} />\n            <br />\n            <h4>网络图片</h4>\n            <p>将想要测试图片地址输入(空白使用默认图片)</p>\n            <CodePaper text={webImageUrl} handleClick={showModal} buttonText=\"显示预览\" className=\"small-size\" />\n            <ImagePreview url={webImageUrl} fixed={true} visible={showWebImage} onClose={closePreview} />\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport './index.scss';\nimport { Level } from './Levels';\n\ninterface Props {\n    level: Level;\n    depth: number;\n    route: string;\n    fontSize: number;\n}\n\nexport const OneLevel = (props: Props) => {\n    const { level, depth, route } = props;\n\n    const renderRouteCheck = () => {\n        const path = window.location.pathname;\n        const result = !!path.match(route);\n        return result;\n    };\n\n    const [active, setActive] = useState<boolean>(renderRouteCheck());\n\n    const activeLevel = (item: Level, route: string) => {\n        setActive(s => !s);\n        return item.static ? replaceRoute(item.route) : changeRoute(route);\n    };\n\n    const replaceRoute = (route: string) => window.location.replace(route);\n\n    const changeRoute = (route: string) => console.log(route);\n\n    const classNameGenerator = (depth: number) => {\n        return `g-levels-link ${depth ? 'g-small-font' : ''}`;\n    };\n\n    return (\n        <div\n            key={level.name}\n            className={classNameGenerator(depth)}\n            onClick={() => activeLevel(level, route)}\n            style={active ? { color: '#2dc6ad' } : undefined}\n        >\n            <span style={{ paddingLeft: `${depth}em` }}></span>\n            {level.name}\n        </div>\n    );\n};\n","import React from 'react';\nimport './index.scss';\nimport { OneLevel } from './OneLevel';\n\nexport type LevelProps = {\n    name: string;\n    route: string;\n};\n\n// 静态url-Level\ninterface StaticLevel extends LevelProps {\n    static: true;\n    deep?: null;\n}\n\n// 层级动态url-Level\ninterface LayerLevel extends LevelProps {\n    static?: false;\n    deep?: Level[];\n}\n\nexport type Level = StaticLevel | LayerLevel;\n\ninterface Props {\n    data: Level[];\n    fontSize?: number;\n}\n\nexport const Levels = (props: Props) => {\n    const { data, fontSize = 45 } = props;\n    // const [activeUrl, setActiveUrl] = useState('');\n\n    /**\n     * 递归渲染层级菜单\n     * @param {Level} item\n     * @param {number} [depth=0]\n     * @param {string} [lastUrl]\n     * @returns {React.ReactNode}\n     */\n    const recursiveRender = (item: Level, depth: number = 0, lastRoute?: string): React.ReactNode => {\n        const route = lastRoute ? `${lastRoute}/${item.route}` : item.route;\n        return (\n            <div key={item.name}>\n                <OneLevel level={item} depth={depth} route={route} fontSize={fontSize} />\n                {item.deep && item.deep.map((deepItem: Level) => recursiveRender(deepItem, depth + 1, route))}\n            </div>\n        );\n    };\n\n    return <div className=\"g-levels-wrapper\">{data.map((item: Level) => recursiveRender(item))}</div>;\n    //  return <div className=\"wrapper\">{props.data.map((item: LevelProps) => <OneLevel item={item} depth={}></OneLevel>)}</div>;\n};\n","import { CodePaper } from 'components/code-paper/CodePaper';\nimport React, { useState } from 'react';\nimport { Level, Levels } from './Levels';\n\nconst levels: Level[] = [\n    { name: 'Pipeline', route: 'pipeline' },\n    { name: 'Github', route: 'https://github.com/', static: true },\n    {\n        name: 'Ground',\n        route: 'ground',\n        deep: [\n            {\n                name: 'Solid',\n                route: 'solid',\n                deep: [\n                    { name: 'Dust', route: 'dust' },\n                    { name: 'Germ', route: 'germ' },\n                ],\n            },\n            { name: 'Liquid', route: 'liquid' },\n        ],\n    },\n];\n\nexport const LevelsDemo = () => {\n    const [levelData, setLevelData] = useState(levels);\n\n    const handleChange = (text: string) => {\n        try {\n            setLevelData(JSON.parse(text));\n        } catch {\n            console.error('error: INVALID JSON ARRAY FORMAT');\n        }\n    };\n    return (\n        <div className=\"demo-levels-wrapper\">\n            <h3>组件名称：层级导航（Levels）</h3>\n            <h4>(开发中)</h4>\n            <h4>示例</h4>\n            当前数据:\n            <CodePaper text={`${JSON.stringify(levels)}`} handleClick={handleChange} />\n            <Levels data={levelData}></Levels>\n        </div>\n    );\n};\n","import React from 'react'\nimport './index.scss'\n\n\nexport const Loading = (props: { handleClick?: () => void }) => {\n    return <span className=\"g-icon-rotate\" onClick={props.handleClick} />\n}\n\n","\nimport React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { RouteWithSubRoutes } from '../../App';\nimport './style.scss';\n\ninterface ICompProps {\n  routes: any[];\n}\n\nconst Component = ({ routes }: ICompProps) => {\n  return (\n    <div className=\"p-comp\">\n      <Switch>\n        {routes.map((route: any) => (\n          <RouteWithSubRoutes key={route.key} {...route} />\n        ))}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Component;","import { Avatar, Card, Col, Row, Statistic } from 'antd';\nimport { routeConfig } from 'config';\nimport React from 'react';\nimport img from '../../assets/image/panda.png';\nimport './style.scss';\n\nconst { Meta } = Card;\n\nconst Home = () => {\n    const hour = new Date().getHours();\n    let hello =\n        hour >= 12 && hour <= 17\n            ? '下午好, 记得多起来动动'\n            : hour >= 17 && hour <= 23\n            ? '晚上好, 要多多玩耍~'\n            : hour > 23 || hour < 5\n            ? '深夜了, 快休息吧'\n            : '早上好, 迎接一天最好的阳光';\n\n    return (\n        <div className=\"p-home\">\n            <h3> 组件平台 </h3>\n            <Row>\n                <Col span={20}>\n                    <Meta\n                        avatar={<Avatar style={{ marginTop: 5 }} size=\"large\" src={img} />}\n                        title={`${hello}`}\n                        description=\"组件目录在侧栏, 请选择查看\"\n                    />\n                </Col>\n                <Col style={{ marginTop: -13 }} span={4}>\n                    <Statistic title=\"当前组件总数\" value={routeConfig[1].routes?.length} />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Home;\n","// components\nimport { CodePaperDemo } from 'components/code-paper/demo';\nimport { ImagePreviewDemo } from 'components/image-preview/demo';\nimport { LevelsDemo } from 'components/levels/demo';\nimport { LoadingDemo } from 'components/loading/demo';\nimport Component from 'pages/Component';\nimport Home from '../pages/Home';\n\nexport interface IRouteSubs {\n    key: string;\n    title: string;\n    path: string;\n    icon?: string;\n    exact?: boolean;\n    component: React.ComponentType<any>;\n}\n\nexport interface IRouteConfigs {\n    key: string;\n    title: string;\n    path: string;\n    icon?: string;\n    exact?: boolean;\n    component: React.ComponentType<any>;\n    inMenu?: boolean;\n    hide?: boolean;\n    routes?: Array<IRouteSubs>;\n}\n\nexport const routeConfig: IRouteConfigs[] = [\n    {\n        key: 'home',\n        icon: 'home',\n        title: '首页',\n        exact: true,\n        component: Home,\n        inMenu: true,\n        path: '/',\n    },\n    {\n        key: 'comp',\n        icon: 'gold',\n        title: '组件',\n        inMenu: true,\n        component: Component,\n        path: '/comp',\n        routes: [\n            {\n                key: 'image-preview',\n                title: '图片预览 · ImagePreview',\n                component: ImagePreviewDemo,\n                path: '/comp/image-preview',\n            },\n            {\n                key: 'levels',\n                title: '阶级导航 · Levels',\n                component: LevelsDemo,\n                path: '/comp/levels',\n            },\n            {\n                key: 'code-paper',\n                title: '代码块 · CodePaper',\n                component: CodePaperDemo,\n                path: '/comp/code-paper',\n            },\n            {\n                key: 'loading',\n                title: '加载 · Loading',\n                component: LoadingDemo,\n                path: '/comp/loading',\n            },\n        ],\n    },\n];\n","import { message } from 'antd'\nimport React from 'react'\nimport { CodePaper } from './CodePaper'\n\nexport const CodePaperDemo = () => {\n    const handleClick = (text: string) =>{\n        message.info(text)\n    }\n    return (\n        <div>\n            <h3>代码块</h3>\n            <CodePaper text='' handleClick={handleClick} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Loading } from '.';\n\nexport const LoadingDemo = () => {\n    return (\n        <div>\n            <Loading></Loading>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            NOTFOUND\n        </div>\n    )\n}\n","import { CheckCircleTwoTone, MenuFoldOutlined, MenuUnfoldOutlined, SettingTwoTone } from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nimport React, { useState } from 'react';\nimport { NavLink, Route, Switch, withRouter } from 'react-router-dom';\nimport './App.scss';\nimport { IRouteConfigs, routeConfig } from './config/index';\nimport { NotFound } from './pages/NotFound';\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\n/**\n * returns nested routes\n * @param {IRouteConfigs} route\n * @returns\n */\nexport function RouteWithSubRoutes(route: IRouteConfigs) {\n    return (\n        <Route\n            path={route.path}\n            render={props => (\n                // pass the sub-routes down to keep nesting\n                <route.component {...props} routes={route.routes} />\n            )}\n        />\n    );\n}\n\nconst App: React.FC = () => {\n    const [collapsed, setCollapsed] = useState(false);\n    const toggle = () => setCollapsed(!collapsed);\n\n    const menuTitle = (routeItem: IRouteConfigs) => (\n        <span>\n            <SettingTwoTone />\n            {/* {routeItem.icon && <SmileTwoTone />} */}\n            <span>{routeItem.title}</span>\n        </span>\n    );\n\n    const renderItems = () => {\n        return routeConfig.map(routeItem => {\n            return routeItem.routes ? (\n                <SubMenu key={routeItem.key} title={menuTitle(routeItem)}>\n                    {routeItem.routes.map(subItem => (\n                        <Menu.Item key={subItem.key}>\n                            <NavLink to={subItem.path}>\n                                {subItem.icon && <CheckCircleTwoTone />}\n                                <span>{subItem.title}</span>\n                            </NavLink>\n                        </Menu.Item>\n                    ))}\n                </SubMenu>\n            ) : routeItem.component ? (\n                <Menu.Item key={routeItem.key}>\n                    <NavLink to={routeItem.path}>\n                        {routeItem.icon && <CheckCircleTwoTone />}\n                        <span>{routeItem.title}</span>\n                    </NavLink>\n                </Menu.Item>\n            ) : null;\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Sider width={250} trigger={null} reverseArrow collapsible collapsed={collapsed}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['home']} defaultOpenKeys={['comp']}>\n                        {renderItems()}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{ background: '#fff', padding: 0 }}>\n                        {collapsed ? (\n                            <MenuUnfoldOutlined onClick={toggle} className=\"trigger\" />\n                        ) : (\n                            <MenuFoldOutlined onClick={toggle} className=\"trigger\" />\n                        )}折叠\n                    </Header>\n                    <Content className=\"App-content\">\n                        <Switch>\n                            123\n                            {routeConfig.map(route => (\n                                <RouteWithSubRoutes key={route.key} {...route} />\n                            ))}\n                            <Route component={NotFound} />\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/panda.6c7f1359.png\";"],"sourceRoot":""}