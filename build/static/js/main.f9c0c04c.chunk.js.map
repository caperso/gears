{"version":3,"sources":["assets/image/panda.png","components/image-preview/ImagePreview.tsx","components/image-preview/demo.tsx","pages/Component/index.tsx","pages/Home/index.tsx","config/index.ts","components/levels/Levels.tsx","pages/NotFound/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initImageState","w","h","r","s","l","t","centerX","centerY","wStatic","hStatic","rotateTime","everRotated","initContainerState","wMax","hMax","ImagePreview","props","url","showPreview","closePreview","title","useState","imageState","setImageState","containerState","setContainerState","container","useRef","image","disX","setDisX","disY","setDisY","draggable","setDraggable","className","onCancel","footer","visible","ref","style","overflow","position","width","height","maxHeight","maxWidth","onMouseMove","e","clientX","clientY","current","onselectstart","onMouseUp","cursor","left","top","transform","onLoad","node","window","innerWidth","innerHeight","wOrigin","naturalWidth","hOrigin","naturalHeight","wRatio","hRatio","size","state","updatedState","console","log","sizing","src","alt","onWheel","stopPropagation","scaleDelta","deltaY","rect","getBoundingClientRect","imageOffWindowLeft","imageOffWindowTop","imageWidth","imageHeight","lastLeft","lastTop","updateState","onMouseDown","preventDefault","persist","offsetLeft","offsetTop","onClick","Component","routes","map","route","RouteWithSubRoutes","key","Meta","routeConfig","icon","exact","component","hour","Date","getHours","hello","span","avatar","marginTop","img","description","value","length","inMenu","path","show","setShow","NotFound","Header","Sider","Content","SubMenu","render","withRouter","collapsed","setCollapsed","menuTitle","routeItem","type","trigger","collapsible","theme","mode","defaultSelectedKeys","defaultOpenKeys","subItem","Item","to","background","padding","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9c0c04c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/panda.6c7f1359.png\";","import { Modal } from 'antd';\nimport React, { useRef, useState } from 'react';\nimport './index.scss';\n\ninterface IProps {\n    url: string;\n    title?: string;\n    showPreview: boolean;\n    closePreview: () => void;\n}\n\nconst initImageState = {\n    w: 0, // width\n    h: 0, // height\n    r: 0, // rotate\n    s: 1, // scale\n    l: 0, // left\n    t: 0, // top\n    centerX: 0,\n    centerY: 0,\n    wStatic: 0,\n    hStatic: 0,\n    rotateTime: 0, // 旋转的次数\n    everRotated: false, // 之前是否经历过旋转\n};\n\nconst initContainerState = {\n    w: 0, // width\n    h: 0, // height\n    wMax: 0,\n    hMax: 0,\n};\n\nexport function ImagePreview(this: any, props: IProps) {\n    const { url, showPreview, closePreview, title = '图片预览' } = props;\n\n    const [imageState, setImageState] = useState(initImageState);\n    const [containerState, setContainerState] = useState(initContainerState);\n\n    // 设定图片的预设大小\n    let container = useRef<HTMLDivElement>(null);\n    let image = useRef<HTMLImageElement>(null);\n\n    /* 初始化容器大小 */\n    const sizing = (node: HTMLImageElement) => {\n        const wMax = window.innerWidth * 0.9;\n        const hMax = window.innerHeight * 0.9 - 100; // 100为底部功能栏高度保留\n\n        const wOrigin = node.naturalWidth; // 初始的图片宽\n        const hOrigin = node.naturalHeight; // 初始的图片高度\n\n        const wRatio = wOrigin / wMax;\n        const hRatio = hOrigin / hMax;\n\n        const size =\n            wRatio < 1 && hRatio < 1\n                ? { w: wOrigin, h: hOrigin }\n                : wRatio > hRatio\n                ? { w: wMax, h: hOrigin / wRatio }\n                : { w: wOrigin / hRatio, h: hMax };\n\n        setImageState(state => {\n            const updatedState = { w: size.w, h: size.h, wStatic: size.w, hStatic: size.h };\n            console.log('图片元素更新状态', updatedState);\n            return { ...state, ...updatedState };\n        });\n\n        setContainerState(state => {\n            return { ...state, wMax, hMax, w: size.w, h: size.h };\n        });\n    };\n\n    const handleImageLoaded = () => {\n        if (image.current) {\n            sizing(image.current);\n        }\n    };\n\n    // 放大\n    const zoomIn = () => setImageState(state => ({ ...state, w: imageState.w * 1.05, h: imageState.h * 1.05 }));\n\n    // 缩小\n    const zoomOut = () => setImageState(state => ({ ...state, w: imageState.w * 0.95, h: imageState.h * 0.95 }));\n\n    // 顺时针旋转\n    const rotateClockwise = () => {\n        setImageState(s => {\n            const updateState = { ...s };\n            updateState.l = 0;\n            updateState.t = 0;\n            updateState.everRotated = true;\n            updateState.r = s.r + 90;\n            updateState.rotateTime = ++s.rotateTime;\n            return updateState;\n        });\n        setContainerState(s => {\n            const updatedState = { ...s };\n            // 宽图扩展高,长图扩展宽\n            const ratio = imageState.wStatic / imageState.hStatic;\n            ratio > 1 ? (updatedState.h = s.w) : (updatedState.w = s.h);\n            return updatedState;\n        });\n    };\n\n    /* 滚轮时缩放 */\n    const toScale = (e: any) => {\n        e.stopPropagation();\n        // 缩放差数\n        let scaleDelta = e.deltaY < 0 ? +0.05 : -0.05; // 放大*1.05/缩小*0.95\n        console.log('缩放比例', scaleDelta);\n        // 捕获元素盒子宽高属性\n        const rect = image.current!.getBoundingClientRect();\n        const imageOffWindowLeft = rect.left;\n        const imageOffWindowTop = rect.top;\n        let imageWidth = rect.width;\n        let imageHeight = rect.height;\n        console.log('图片对窗口左偏移量', rect.left, '光标对窗口左偏移量', e.clientX);\n        // 当图片是奇数次旋转时宽高对调\n        const needExchange = imageState.rotateTime % 2 === 1;\n        if (needExchange) {\n            [imageWidth, imageHeight] = [imageHeight, imageWidth];\n        }\n        // 缩放宽高\n        let w = imageWidth * (1 + scaleDelta);\n        let h = imageHeight * (1 + scaleDelta);\n        // 原有的偏移量\n        let lastLeft = imageState.l;\n        let lastTop = imageState.t;\n        /*\n         * 本行为目的:\n         * 之前经历过旋转,在下一次缩放时, 即刻调整其l,t参考点到旋转后的左上角,在计算其缩放后的偏移值\n         * 解释:翻转后,state内的l,t参考点仍是翻转前的左上角,css翻转不会改变state内参数\n         * 在此将参考点偏移到目前左上角, 计算最终图片l, t偏移量, 并且关闭everRotated\n         */\n        // if (needExchange && imageState.everRotated) {\n        //     const deltaW = Math.abs(0.5 * (rect.width - rect.height))\n        //     const deltaH = Math.abs(0.5 * (rect.height - rect.width))\n        //     if (imageWidth / imageHeight >= 1) {\n        //         // 超高图=>超宽图\n        //         lastTop += deltaH\n        //         lastLeft -= deltaW\n        //     } else {\n        //         // 超高图=>超宽图\n        //         lastTop -= deltaH\n        //         lastLeft += deltaW\n        //     }\n        // }\n        // 保持缩放坐标点与鼠标坐标点重合\n        let l = lastLeft - scaleDelta * (e.clientX - imageOffWindowLeft);\n        let t = lastTop - scaleDelta * (e.clientY - imageOffWindowTop);\n        setImageState(s => {\n            const updateState = { ...s, w, h, l, t, everRotated: false };\n            console.log('origin', s, 'current', updateState);\n            return updateState;\n        });\n    };\n\n    const [disX, setDisX] = useState(0);\n    const [disY, setDisY] = useState(0);\n    const [draggable, setDraggable] = useState(false);\n\n    // 拖拽开关\n    const drag = (e: any) => {\n        e.preventDefault();\n        e.persist();\n        console.log('drag');\n        setDraggable(true);\n        setDisX(e.clientX - image.current!.offsetLeft);\n        setDisY(e.clientY - image.current!.offsetTop);\n    };\n\n    // 拖拽移动\n    const startMove = function(e: any) {\n        if (draggable) {\n            let l = e.clientX - disX;\n            let t = e.clientY - disY;\n\n            setImageState(s => {\n                const updateState = { ...s, l, t };\n                return updateState;\n            });\n            container.current!.onselectstart = function() {\n                return false;\n            };\n        }\n    };\n\n    // 拖拽结束\n    const endMove = function(e: any) {\n        setDraggable(false);\n        container.current!.onselectstart = null;\n    };\n\n    // 关闭modal 复位图片\n    const closeModal = () => {\n        closePreview();\n        setImageState(initImageState);\n        setContainerState(initContainerState);\n    };\n\n    // doesn't work\n    // const containerStyle = {\n    //     overflow: 'hidden',\n    //     position: 'relative',\n    //     width: `${containerState.w}px`,\n    //     height: `${containerState.h}px`,\n    //     maxHeight: `${containerState.hMax}px`,\n    //     maxWidth: `${containerState.wMax}px`,\n    // };\n\n    // doesn't work\n    // const imageStyle = {\n    //     cursor: ` move`,\n    //     position: ` absolute`,\n    //     left: ` ${imageState.l}px`,\n    //     top: ` ${imageState.t}px`,\n    //     width: ` ${imageState.w}px`,\n    //     height: ` ${imageState.h}px`,\n    //     transform: ` translate3d(0, 0, 0) rotate(${imageState.r}deg) scale(${imageState.s}, ${imageState.s})`,\n    // };\n\n    return (\n        <Modal className=\"preview-modal\" onCancel={closeModal} footer={null} visible={showPreview}>\n            <div>{title}</div>\n            <div\n                ref={container}\n                style={{\n                    overflow: 'hidden',\n                    position: 'relative',\n                    width: `${containerState.w}px`,\n                    height: `${containerState.h}px`,\n                    maxHeight: `${containerState.hMax}px`,\n                    maxWidth: `${containerState.wMax}px`,\n                }}\n                onMouseMove={startMove}\n                onMouseUp={endMove}\n            >\n                <img\n                    style={{\n                        cursor: `move`,\n                        position: `absolute`,\n                        left: `${imageState.l}px`,\n                        top: `${imageState.t}px`,\n                        width: `${imageState.w}px`,\n                        height: `${imageState.h}px`,\n                        transform: `translate3d(0, 0, 0) rotate(${imageState.r}deg) scale(${imageState.s}, ${imageState.s})`,\n                    }}\n                    onLoad={handleImageLoaded}\n                    ref={image}\n                    src={url}\n                    alt=\"图片\"\n                    onWheel={toScale}\n                    onMouseDown={drag}\n                />\n            </div>\n            <div className=\"operation-bar\">\n                <i className=\"iconfont operator\" onClick={zoomIn}>\n                    +\n                </i>\n                <i className=\"iconfont operator\" onClick={zoomOut}>\n                    -\n                </i>\n                <i className=\"iconfont operator\" onClick={rotateClockwise}>\n                    R\n                </i>\n                <i className=\"iconfont operator\">D</i>\n            </div>\n        </Modal>\n    );\n}\n","import { Button } from 'antd';\nimport React, { useState } from 'react';\nimport './demo.scss';\nimport { ImagePreview } from './ImagePreview';\n\nconst thumbUrl = 'https://cdn.pixabay.com/photo/2020/02/01/03/00/girl-4809434__480.jpg';\nconst imageUrl = 'https://cdn.pixabay.com/photo/2020/02/01/03/00/girl-4809434_1280.jpg'\n\nexport const ImagePreviewDemo = () => {\n    const [show, setShow] = useState(false);\n\n    const showPreview = () => {\n        setShow(true);\n    };\n    const closePreview = () => {\n        setShow(false);\n    };\n\n    return (\n        <div>\n            <h3>组件名称：图片预览（ImagePreview）</h3>\n            <ImagePreview url={imageUrl} showPreview={show} closePreview={closePreview} />\n            <img src={thumbUrl} alt=\"图片\" onClick={showPreview}></img>\n            <div className=\"buttons\">\n                <Button onClick={showPreview}>显示预览 </Button>\n            </div>\n        </div>\n    );\n};\n","\nimport React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { RouteWithSubRoutes } from '../../App';\nimport './style.scss';\n\ninterface ICompProps {\n  routes: any[];\n}\n\nconst Component = ({ routes }: ICompProps) => {\n  return (\n    <div className=\"p-comp\">\n      <Switch>\n        {routes.map((route: any) => (\n          <RouteWithSubRoutes key={route.key} {...route} />\n        ))}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Component;","import { Avatar, Card, Col, Row, Statistic } from 'antd';\nimport { routeConfig } from 'config';\nimport React from 'react';\nimport img from '../../assets/image/panda.png';\nimport './style.less';\n\nconst { Meta } = Card;\n\nconst Home = () => {\n    const hour = new Date().getHours();\n    let hello = hour >= 12 && hour <= 17 ? '下午好' : hour >= 17 && hour <= 24 ? '晚上好' : '早上好';\n\n    return (\n        <div className=\"p-home\">\n            <h3> 组件平台 </h3>\n            <Row>\n                <Col span={20}>\n                    <Meta\n                        avatar={<Avatar style={{ marginTop: 5 }} size=\"large\" src={img} />}\n                        title={`${hello}`}\n                        description=\"组件目录在侧栏, 请选择查看\"\n                    />\n                </Col>\n                <Col style={{ marginTop: -13 }} span={4}>\n                    <Statistic title=\"当前组件总数\" value={routeConfig[1].routes?.length} />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Home;\n","// components\nimport { ImagePreviewDemo } from 'components/image-preview/demo';\nimport { Levels } from 'components/levels/Levels';\nimport Component from 'pages/Component';\nimport Home from '../pages/Home';\n\nexport interface IRouteSubs {\n  key: string;\n  title: string;\n  path: string;\n  icon?: string;\n  exact?: boolean;\n  component: React.ComponentType<any>;\n}\n\nexport interface IRouteConfigs {\n  key: string;\n  title: string;\n  path: string;\n  icon?: string;\n  exact?: boolean;\n  component: React.ComponentType<any>;\n  inMenu?: boolean;\n  hide?: boolean;\n  routes?: Array<IRouteSubs>;\n}\n\nexport const routeConfig: IRouteConfigs[] = [\n  {\n    key: 'home',\n    icon: 'home',\n    title: '首页',\n    exact: true,\n    component: Home,\n    inMenu: true,\n    path: '/',\n  },\n  {\n    key: 'comp',\n    icon: 'gold',\n    title: '组件',\n    inMenu: true,\n    component: Component,\n    path: '/comp',\n    routes: [\n      {\n        key: 'image-preview',\n        title: '图片预览 · ImagePreview',\n        component: ImagePreviewDemo,\n        path: '/comp/image-preview',\n      },\n      {\n        key: 'levels',\n        title: '阶级导航 · Levels',\n        component: Levels,\n        path: '/comp/levels',\n      },\n    ],\n  },\n];","import React from 'react'\n\nexport const Levels = () => {\n    return (\n        <div>\n            123123123123\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            NOTFOUND\n        </div>\n    )\n}\n","import { Icon, Layout, Menu } from 'antd';\nimport React, { useState } from 'react';\nimport { NavLink, Route, Switch, withRouter } from 'react-router-dom';\nimport './App.less';\nimport { IRouteConfigs, routeConfig } from './config/index';\nimport { NotFound } from './pages/NotFound';\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\n/**\n * returns nested routes\n * @param {IRouteConfigs} route\n * @returns\n */\nexport function RouteWithSubRoutes(route: IRouteConfigs) {\n    return (\n        <Route\n            path={route.path}\n            render={props => (\n                // pass the sub-routes down to keep nesting\n                <route.component {...props} routes={route.routes} />\n            )}\n        />\n    );\n}\n\nconst App: React.FC = () => {\n    const [collapsed, setCollapsed] = useState(false);\n    const toggle = () => setCollapsed(!collapsed);\n\n    const menuTitle = (routeItem: IRouteConfigs) => (\n        <span>\n            {routeItem.icon && <Icon type={routeItem.icon} />}\n            <span>{routeItem.title}</span>\n        </span>\n    );\n\n    const renderItems = () => {\n        return routeConfig.map(routeItem => {\n            return routeItem.routes ? (\n                <SubMenu key={routeItem.key} title={menuTitle(routeItem)}>\n                    {routeItem.routes.map(subItem => (\n                        <Menu.Item key={subItem.key}>\n                            <NavLink to={subItem.path}>\n                                {subItem.icon && <Icon type={subItem.icon} />}\n                                <span>{subItem.title}</span>\n                            </NavLink>\n                        </Menu.Item>\n                    ))}\n                </SubMenu>\n            ) : routeItem.component ? (\n                <Menu.Item key={routeItem.key}>\n                    <NavLink to={routeItem.path}>\n                        {routeItem.icon && <Icon type={routeItem.icon} />}\n                        <span>{routeItem.title}</span>\n                    </NavLink>\n                </Menu.Item>\n            ) : null;\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={collapsed}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['home']} defaultOpenKeys={['comp']}>\n                        {renderItems()}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{ background: '#fff', padding: 0 }}>\n                        <Icon className=\"trigger\" type={collapsed ? 'menu-unfold' : 'menu-fold'} onClick={toggle} />\n                    </Header>\n                    <Content className=\"App-content\">\n                        <Switch>\n                            123\n                            {routeConfig.map(route => (\n                                <RouteWithSubRoutes key={route.key} {...route} />\n                            ))}\n                            <Route component={NotFound} />\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}