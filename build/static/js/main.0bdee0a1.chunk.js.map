{"version":3,"sources":["components/code-paper/CodePaper.tsx","components/isolate-block/IsolateBlock.tsx","components/web-frame/index.tsx","components/context-menu/ContextMenu.tsx","components/image-preview/ImagePreview.tsx","components/image-preview/demo/demo.tsx","components/levels/OneLevel.tsx","components/levels/Levels.tsx","components/levels/demo.tsx","components/loading/index.tsx","pages/Component/index.tsx","pages/Home/index.tsx","config/index.ts","components/code-paper/demo/demo.tsx","components/loading/demo.tsx","pages/NotFound/index.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/image/panda.png"],"names":["CodePaper","props","textarea","useRef","className","ref","defaultValue","text","handleClick","onClick","current","value","buttonText","IsolateBlock","style","children","WebFrame","url","src","title","ContextMenu","menu","useState","x","y","cursorPoint","setCursorPoint","showContextMenu","setShowContextMenu","position","left","top","backgroundColor","borderRadius","padding","e","stopPropagation","onContextMenu","preventDefault","clientX","clientY","Array","map","item","key","name","method","renderMenu","emptyImageProps","w","h","r","l","t","defaultOperator","bar","contextMenu","ImagePreview","fixedOnScreen","onClose","operator","visible","imageState","setImageState","imageLoadedState","setImageLoadedState","image","imageStyle","cursor","width","height","transform","useEffect","prevent","enablePassiveWheelEvent","document","removeEventListener","addEventListener","passive","console","log","reset","setControlMode","setRotatable","setDraggable","close","controlMode","changeMode","mode","distToImageBoundary","setDistToImageBoundary","draggable","rotatable","pointA","setPointA","Map","state","s","imageOperationsMap","menuList","get","newItem","renderContextMenu","onMouseDown","offsetLeft","offsetTop","startMove","startRotate","onMouseMove","dragging","pointB","getLine","point1","point2","Math","sqrt","pow","abs","getBoundingClientRect","pointO","right","bottom","a","b","c","cosO","degree","acos","matrix","direct","rotating","onMouseUp","endRotate","onLoad","changedState","node","window","innerWidth","innerHeight","wMax","hMax","wOrigin","naturalWidth","hOrigin","naturalHeight","wRatio","hRatio","size","finalState","sizing","alt","onWheel","scaleDelta","deltaY","relativePoint","lastLeft","lastTop","barOperations","warn","renderBar","Panel","Collapse","largeSample","OneLevel","level","depth","route","location","pathname","match","active","setActive","replaceRoute","replace","changeRoute","classNameGenerator","static","activeLevel","color","undefined","paddingLeft","Levels","data","fontSize","recursiveRender","lastRoute","deep","deepItem","levels","Loading","Component","routes","RouteWithSubRoutes","Meta","routeConfig","icon","exact","component","hour","Date","getHours","hello","span","avatar","marginTop","img","description","length","inMenu","path","show","setShow","webImageUrl","setWebImageUrl","localStorage","getItem","setItem","defaultActiveKey","onChange","header","levelData","setLevelData","JSON","stringify","parse","error","message","info","NotFound","Header","Sider","Content","SubMenu","render","withRouter","collapsed","setCollapsed","toggle","isMobile","test","navigator","userAgent","menuTitle","routeItem","SettingTwoTone","trigger","reverseArrow","collapsible","theme","defaultSelectedKeys","defaultOpenKeys","subItem","Item","to","CheckCircleTwoTone","background","MenuUnfoldOutlined","MenuFoldOutlined","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0bdee0a1.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport './CodePaper.scss';\ninterface Props {\n    text: string;\n    buttonText?: string;\n    className?: string;\n    handleClick?: (text: string) => void;\n}\n\nexport const CodePaper = (props: Props) => {\n    const textarea = useRef<HTMLTextAreaElement>(null);\n    const updateChanges = () => {\n        const text = textarea.current!.value;\n        if (props.handleClick) {\n            props.handleClick(text);\n        }\n    };\n    return (\n        <div className=\"g-code-paper-wrapper\">\n            <textarea ref={textarea} defaultValue={props.text} className={`g-code-paper-textarea ${props.className}`} />\n            {props.handleClick && <button onClick={updateChanges}>{props.buttonText ? props.buttonText : '更新数据'}</button>}\n        </div>\n    );\n};\n","import React from 'react';\nimport { DefaultHTMLElementProps } from 'typings/types';\nimport './IsolateBlock.scss';\n\ninterface Props extends DefaultHTMLElementProps {\n    children: React.ReactNode;\n}\n\nexport const IsolateBlock = (props: Props) => {\n    const { style, className, children } = props;\n    return (\n        <div className={`g-isolate-block-wrapper ${className}`} style={style}>\n            {children}\n        </div>\n    );\n};\n","import React from 'react';\nimport './index.scss';\n\nexport const WebFrame = (props: { url: string }) => {\n    const { url = '' } = props;\n    return <iframe src={url} className=\"g-frame\" title='placeholder'></iframe>;\n};\n","import React, { useState } from 'react';\nimport { AxisPoint, DefaultHTMLElementProps, MenuItem } from 'typings/types';\nimport './ContextMenu.scss';\n\ninterface Props extends DefaultHTMLElementProps {\n    menu?: MenuItem[] | React.ReactElement | null;\n    children: React.ReactElement;\n}\n\nconst ContextMenu = (props: Props) => {\n    const { menu, children } = props;\n\n    const [cursorPoint, setCursorPoint] = useState<AxisPoint>({ x: 0, y: 0 });\n\n    const [showContextMenu, setShowContextMenu] = useState(false);\n\n    const style: React.CSSProperties = {\n        position: 'fixed',\n        left: cursorPoint.x,\n        top: cursorPoint.y,\n        backgroundColor: 'white',\n        borderRadius: '4px',\n        padding: '4px',\n    };\n\n    /* 右键菜单 */\n    const openMenu = (e: React.MouseEvent) => {\n        e.preventDefault();\n        setCursorPoint({ x: e.clientX, y: e.clientY });\n        setShowContextMenu(true);\n    };\n\n    const handleClick = (e: React.MouseEvent) => {\n        setShowContextMenu(false);\n        e.stopPropagation();\n    };\n\n    const renderMenu = (menu: Props['menu']): React.ReactNode => {\n        if (menu instanceof Array) {\n            return (\n                <>\n                    {(menu as MenuItem[]).map((item: MenuItem) => (\n                        <div key={item.name} onClick={item.method}>\n                            {item.name}\n                        </div>\n                    ))}\n                </>\n            );\n        } else {\n            return menu;\n        }\n    };\n\n    if (!menu) {\n        return <div onClick={handleClick}>{children}</div>;\n    }\n\n    return (\n        <div onClick={handleClick} onContextMenu={openMenu}>\n            {children}\n            {showContextMenu && (\n                <div className=\"g-context-menu-default\" style={style}>\n                    {renderMenu(menu)}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ContextMenu;\n","// import { ContextMenu } from 'components/ContextMenu';\nimport ContextMenu from 'components/context-menu/ContextMenu';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { AxisPoint, ImageControlMode, ImageOperations, MenuItem } from 'typings/types';\nimport './ImagePreview.scss';\n\ntype Operator = {\n    bar: ImageOperations[] | React.ReactElement | null;\n    contextMenu: ImageOperations[] | React.ReactElement | null;\n};\n\ninterface Props {\n    url: string; // 图片地址\n    visible: boolean; // 组件可视状态\n    onClose: () => void; // 组件关闭回调\n    fixedOnScreen?: boolean; // 组件是否固定\n    operator?: Operator; // 组件控制项接口\n}\n\ninterface BaseImageProps {\n    w: number; // width\n    h: number; // height\n    r: number; // rotate\n    l: number; // left\n    t: number; // top\n}\n\nconst emptyImageProps = { w: 0, h: 0, r: 0, l: 0, t: 0 };\n\nconst defaultOperator = {\n    bar: ['zoom-in', 'zoom-out', 'free-rotate', 'free-drag', 'reset'],\n    contextMenu: ['rotate', 'free-rotate', 'free-drag'],\n};\n\nexport function ImagePreview(this: any, props: Props) {\n    const { url, fixedOnScreen = true, onClose, operator = defaultOperator } = props;\n\n    let visible = fixedOnScreen ? props.visible : true; // 一旦非固定在屏幕, 则常亮\n\n    const [imageState, setImageState] = useState<BaseImageProps>(emptyImageProps);\n\n    const [imageLoadedState, setImageLoadedState] = useState<BaseImageProps>(emptyImageProps);\n\n    let image = useRef<HTMLImageElement>(null);\n\n    const imageStyle: React.CSSProperties = {\n        cursor: `move`,\n        position: `absolute`,\n        left: `${imageState.l}px`,\n        top: `${imageState.t}px`,\n        width: `${imageState.w}px`,\n        height: `${imageState.h}px`,\n        transform: `translate(-50%, -50%) rotate(${imageState.r}deg)`,\n    };\n\n    // 禁用document滚轮防止意外滚动\n    useEffect(() => {\n        const prevent = (e: any) => e.preventDefault();\n        const disablePassiveWheelEvent = () => document.addEventListener('wheel', prevent, { passive: false });\n        const enablePassiveWheelEvent = () => document.removeEventListener('wheel', prevent);\n        if (visible) {\n            disablePassiveWheelEvent();\n        } else {\n            enablePassiveWheelEvent();\n        }\n        return enablePassiveWheelEvent;\n    }, [visible]);\n\n    /**\n     * 调整图片至遮罩的中心, 等比缩放图片, 避免屏幕裁剪\n     * @param {HTMLImageElement} node\n     * @returns\n     */\n    const sizing = (node: HTMLImageElement) => {\n        const l = window.innerWidth / 2;\n        const t = window.innerHeight / 2;\n\n        const wMax = window.innerWidth * 0.9;\n        const hMax = window.innerHeight * 0.9 - 100; // 100为底部功能栏高度保留\n\n        const wOrigin = node.naturalWidth; // 初始的图片宽\n        const hOrigin = node.naturalHeight; // 初始的图片高度\n\n        const wRatio = wOrigin / wMax;\n        const hRatio = hOrigin / hMax;\n\n        const size =\n            wRatio < 1 && hRatio < 1\n                ? { w: wOrigin, h: hOrigin }\n                : wRatio > hRatio\n                ? { w: wMax, h: hOrigin / wRatio }\n                : { w: wOrigin / hRatio, h: hMax };\n\n        const changedState = { t, l, w: size.w, h: size.h };\n        const finalState = { ...imageState, ...changedState };\n        setImageState(finalState);\n        return finalState;\n    };\n\n    /* 初始化容器大小 */\n    const handleImageLoaded = () => {\n        console.log('image-loaded');\n        if (image.current) {\n            const changedState = sizing(image.current);\n            setImageLoadedState(changedState);\n        }\n    };\n\n    console.log('imageLoadedState', imageLoadedState);\n\n    /* 放大 */\n    const zoomIn = () => {\n        // setImageState(state => ({ ...state, w: imageState.w * 1.05, h: imageState.h * 1.05 }));\n        setImageState(imageLoadedState);\n        console.log(imageLoadedState,imageState);\n        \n    };\n\n    /* 缩小 */\n    const zoomOut = () => {\n        setImageState(state => ({ ...state, w: imageState.w * 0.95, h: imageState.h * 0.95 }));\n    };\n\n    /* 旋转 */\n    const rotate = () => {\n        setImageState(s => ({ ...s, r: s.r + 90 }));\n    };\n\n    /* 重置 */\n    const reset = () => {\n        setControlMode('drag');\n        setRotatable(false);\n        setDraggable(false);\n        setImageState(imageLoadedState);\n    };\n\n    /* 关闭预览 */\n    const close = () => {\n        reset();\n        if (onClose) {\n            onClose();\n        }\n    };\n\n    /* 特殊行为 */\n\n    /* 滚轮缩放 */\n    const toScale = (e: React.WheelEvent) => {\n        let scaleDelta = e.deltaY < 0 ? +0.05 : -0.05;\n\n        // 捕获鼠标在图片位置\n        const relativePoint: AxisPoint = { x: e.clientX - imageState.l, y: e.clientY - imageState.t };\n\n        // 缩放宽高\n        let w = imageState.w * (1 + scaleDelta);\n        let h = imageState.h * (1 + scaleDelta);\n\n        // 原有的偏移量\n        let lastLeft = imageState.l;\n        let lastTop = imageState.t;\n\n        // 保持缩放后坐标点与鼠标坐标点重合\n        let l = lastLeft - scaleDelta * relativePoint.x;\n        let t = lastTop - scaleDelta * relativePoint.y;\n        setImageState(s => {\n            const updateState = { ...s, w, h, l, t };\n            return updateState;\n        });\n    };\n\n    const [controlMode, setControlMode] = useState<ImageControlMode>('drag');\n\n    const changeMode = (mode: ImageControlMode) => setControlMode(mode);\n\n    /* 拖拽 */\n    const [distToImageBoundary, setDistToImageBoundary] = useState<AxisPoint>({ x: 0, y: 0 });\n    const [draggable, setDraggable] = useState(false);\n\n    // 拖拽开始\n    const startMove = (e: React.MouseEvent) => {\n        e.preventDefault();\n        setDraggable(true);\n        setDistToImageBoundary({ x: e.clientX - image.current!.offsetLeft, y: e.clientY - image.current!.offsetTop });\n    };\n\n    // 拖拽移动\n    const dragging = function(e: React.MouseEvent) {\n        if (!draggable) {\n            return;\n        }\n        let l = e.clientX - distToImageBoundary.x;\n        let t = e.clientY - distToImageBoundary.y;\n        setImageState(s => ({ ...s, l, t }));\n    };\n\n    // 拖拽结束\n    const endMove = function() {\n        setDraggable(false);\n    };\n\n    /* 自由旋转 */\n    const [rotatable, setRotatable] = useState(false);\n    const [pointA, setPointA] = useState<AxisPoint>({ x: 0, y: 0 });\n    const startRotate = function(e: React.MouseEvent) {\n        e.preventDefault();\n        setPointA({ x: e.clientX, y: e.clientY });\n        setRotatable(true);\n    };\n\n    const rotating = function(e: React.MouseEvent) {\n        if (!rotatable) {\n            return;\n        }\n\n        const pointB = { x: e.clientX, y: e.clientY };\n\n        const getLine = (point1: AxisPoint, point2: AxisPoint): number =>\n            Math.sqrt(Math.pow(Math.abs(point1.x - point2.x), 2) + Math.pow(Math.abs(point1.y - point2.y), 2));\n\n        const { left, right, top, bottom } = image.current!.getBoundingClientRect();\n        const pointO = { x: (left + right) / 2, y: (top + bottom) / 2 };\n        const a = getLine(pointB, pointA);\n        const b = getLine(pointB, pointO);\n        const c = getLine(pointA, pointO);\n\n        let cosO = (b * b + c * c - a * a) / (2 * b * c);\n        let degree = (Math.acos(cosO) * 180) / 3.1415;\n\n        // 求向量积\n        let matrix = [\n            [pointA.x - pointO.x, pointB.x - pointO.x],\n            [pointA.y - pointO.y, pointB.y - pointO.y],\n        ];\n        let direct = matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0] >= 0 ? +1 : -1;\n\n        setImageState(s => ({ ...s, r: s.r + direct * degree }));\n        setPointA(pointB);\n    };\n\n    const endRotate = function(e: React.MouseEvent) {\n        setPointA({ x: e.clientX, y: e.clientY });\n        setRotatable(false);\n    };\n\n    const handleMouseDown = (e: React.MouseEvent) => {\n        controlMode === 'drag' ? startMove(e) : startRotate(e);\n    };\n\n    const handleMouseMove = (e: React.MouseEvent) => {\n        controlMode === 'drag' ? dragging(e) : rotating(e);\n    };\n\n    const handleMouseUp = (e: React.MouseEvent) => {\n        controlMode === 'drag' ? endMove() : endRotate(e);\n    };\n\n    /* 图片操作 */\n    const [imageOperationsMap] = useState(\n        new Map<string, (props?: any) => void>([\n            ['zoom-in', zoomIn],\n            ['zoom-out', zoomOut],\n            ['rotate', rotate],\n            ['free-drag', () => changeMode('drag')],\n            ['free-rotate', () => changeMode('rotate')],\n            ['reset', reset],\n        ]),\n    );\n\n    /* 渲染 */\n\n    /* 右键菜单渲染 */\n    const renderContextMenu = (): MenuItem[] | React.ReactElement | null => {\n        // 不渲染右键菜单\n        if (!operator || !operator.contextMenu) {\n            return null;\n        }\n\n        // 字符串数组\n        if (operator.contextMenu instanceof Array) {\n            let menuList: MenuItem[] = [];\n            for (let name of operator.contextMenu) {\n                const method = imageOperationsMap.get(name);\n                if (method) {\n                    const newItem: MenuItem = { name, method };\n                    menuList = [...menuList, newItem];\n                }\n            }\n            return menuList;\n        }\n\n        // 组件\n        return operator.contextMenu as React.ReactElement;\n    };\n\n    /* 操作栏渲染 */\n    const renderBar = (): Operator['bar'] => {\n        if (!operator || !operator.bar) {\n            return null;\n        }\n        if (operator.bar instanceof Array) {\n            let barOperations: MenuItem[] = [];\n            for (let name of operator.bar) {\n                const method = imageOperationsMap.get(name);\n                if (method) {\n                    const newItem: MenuItem = { name, method };\n                    barOperations = [...barOperations, newItem];\n                } else {\n                    console.warn(`can't find method which refers ${name}`);\n                }\n            }\n\n            const menu = (\n                <div className=\"g-image-preview-action-bar\" onClick={e => e.stopPropagation()}>\n                    {barOperations.map(item => (\n                        <i key={item.name} onClick={item.method}>\n                            {item.name}\n                        </i>\n                    ))}\n                </div>\n            );\n            return menu;\n        }\n        return operator.bar;\n    };\n\n    if (!visible) {\n        return <></>;\n    }\n\n    return (\n        // <div className={`g-image-preview-wrapper ${fixedOnScreen ? 'g-fixed-wrapper' : ''}`} onClick={fixedOnScreen ? close : void 0}>\n        <div className={`g-image-preview-wrapper g-fixed-wrapper`} onClick={close}>\n            <div className=\"g-image-preview-icon-close\" onClick={close}>\n                X\n            </div>\n            <ContextMenu menu={renderContextMenu()}>\n                <img\n                    // className={`g-image-preview-image ${fixedOnScreen ? 'g-image-preview-image-fixed' : 'g-image-preview-image-relative'}`}\n                    className={`g-image-preview-image g-image-preview-image-fixed`}\n                    onMouseDown={handleMouseDown}\n                    onMouseMove={handleMouseMove}\n                    onMouseUp={handleMouseUp}\n                    style={imageStyle}\n                    onLoad={handleImageLoaded}\n                    ref={image}\n                    src={url}\n                    alt=\"图片\"\n                    onWheel={toScale}\n                />\n            </ContextMenu>\n            {renderBar()}\n        </div>\n    );\n}\n","import Collapse from 'antd/lib/collapse/Collapse';\nimport { CodePaper } from 'components/code-paper/CodePaper';\nimport { IsolateBlock } from 'components/isolate-block/IsolateBlock';\nimport { WebFrame } from 'components/web-frame';\nimport React, { useEffect, useState } from 'react';\nimport img from '../../../assets/image/panda.png';\nimport { ImagePreview } from '../ImagePreview';\nimport './demo.scss';\n\nconst { Panel } = Collapse;\n\nconst largeSample = 'https://cdn.pixabay.com/photo/2020/03/08/11/21/british-4912211_960_720.jpg';\n\nexport const ImagePreviewDemo = () => {\n    const [show, setShow] = useState<number | null>(-1);\n\n    const [webImageUrl, setWebImageUrl] = useState('');\n\n    const close = () => {\n        setShow(null);\n    };\n\n    const showDefault = () => {\n        setShow(0);\n    };\n\n    const showDefaultLarge = () => {\n        setShow(1);\n    };\n\n    const showWebImage = (text: string) => {\n        if (text) {\n            setWebImageUrl(text);\n            localStorage.setItem('image-preview-url', text);\n        }\n        setShow(2);\n    };\n\n    // 加载本地缓存url\n    useEffect(() => {\n        const text = localStorage.getItem('image-preview-url');\n        if (text) {\n            setWebImageUrl(text);\n        }\n    }, []);\n\n    function callback(key: any) {\n        console.log(key);\n    }\n\n    return (\n        <div>\n            <h2>组件名称：图片预览（ImagePreview）</h2>\n            <p>基础操作: 滚轮缩放 拖拽</p>\n            <p>菜单操作: 旋转 重置</p>\n            <div className=\"g-table\">\n                <IsolateBlock>\n                    <h4>基本示例</h4>\n                    <p>无菜单</p>\n                    <img src={img} alt=\"图片\" className=\"g-sample-image\" onClick={showDefault} />\n                    <ImagePreview\n                        url={img}\n                        fixedOnScreen={true}\n                        visible={show === 0}\n                        onClose={close}\n                        operator={{ bar: null, contextMenu: null }}\n                    />\n                </IsolateBlock>\n\n\n                <IsolateBlock>\n                    <h4>功能菜单</h4>\n                    <p>含默认右键菜单</p>\n                    <img alt=\"图片\" className=\"g-sample-image\" src={largeSample} onClick={showDefaultLarge} />\n                    <ImagePreview url={largeSample} fixedOnScreen={true} visible={show === 1} onClose={close} />\n                    <br />\n                </IsolateBlock>\n\n                <IsolateBlock>\n                    <h4>网络图片</h4>\n                    <p>默认菜单</p>\n                    <p>将想要测试图片地址输入(空白使用默认图片)</p>\n\n                    <CodePaper text={webImageUrl} handleClick={showWebImage} buttonText=\"显示预览\" className=\"small-size\" />\n                    <ImagePreview\n                        url={webImageUrl}\n                        operator={{ bar: null, contextMenu: ['zoom-in', 'zoom-out'] }}\n                        fixedOnScreen={true}\n                        visible={show === 2}\n                        onClose={close}\n                    />\n                </IsolateBlock>\n            </div>\n\n            <Collapse defaultActiveKey={['0']} onChange={callback}>\n                <Panel header=\"文档\" key=\"1\">\n                    <WebFrame url=\"https://caperso.github.io/gas-pedal/image-preview\"></WebFrame>\n                </Panel>\n            </Collapse>\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport './index.scss';\nimport { Level } from './Levels';\n\ninterface Props {\n    level: Level;\n    depth: number;\n    route: string;\n    fontSize: number;\n}\n\nexport const OneLevel = (props: Props) => {\n    const { level, depth, route } = props;\n\n    const renderRouteCheck = () => {\n        const path = window.location.pathname;\n        const result = !!path.match(route);\n        return result;\n    };\n\n    const [active, setActive] = useState<boolean>(renderRouteCheck());\n\n    const activeLevel = (item: Level, route: string) => {\n        setActive(s => !s);\n        return item.static ? replaceRoute(item.route) : changeRoute(route);\n    };\n\n    const replaceRoute = (route: string) => window.location.replace(route);\n\n    const changeRoute = (route: string) => console.log(route);\n\n    const classNameGenerator = (depth: number) => {\n        return `g-levels-link ${depth ? 'g-small-font' : ''}`;\n    };\n\n    return (\n        <div\n            key={level.name}\n            className={classNameGenerator(depth)}\n            onClick={() => activeLevel(level, route)}\n            style={active ? { color: '#2dc6ad' } : undefined}\n        >\n            <span style={{ paddingLeft: `${depth}em` }}></span>\n            {level.name}\n        </div>\n    );\n};\n","import React from 'react';\nimport './index.scss';\nimport { OneLevel } from './OneLevel';\n\nexport type LevelProps = {\n    name: string;\n    route: string;\n};\n\n// 静态url-Level\ninterface StaticLevel extends LevelProps {\n    static: true;\n    deep?: null;\n}\n\n// 层级动态url-Level\ninterface LayerLevel extends LevelProps {\n    static?: false;\n    deep?: Level[];\n}\n\nexport type Level = StaticLevel | LayerLevel;\n\ninterface Props {\n    data: Level[];\n    fontSize?: number;\n}\n\nexport const Levels = (props: Props) => {\n    const { data, fontSize = 45 } = props;\n    // const [activeUrl, setActiveUrl] = useState('');\n\n    /**\n     * 递归渲染层级菜单\n     * @param {Level} item\n     * @param {number} [depth=0]\n     * @param {string} [lastUrl]\n     * @returns {React.ReactNode}\n     */\n    const recursiveRender = (item: Level, depth: number = 0, lastRoute?: string): React.ReactNode => {\n        const route = lastRoute ? `${lastRoute}/${item.route}` : item.route;\n        return (\n            <div key={item.name}>\n                <OneLevel level={item} depth={depth} route={route} fontSize={fontSize} />\n                {item.deep && item.deep.map((deepItem: Level) => recursiveRender(deepItem, depth + 1, route))}\n            </div>\n        );\n    };\n\n    return <div className=\"g-levels-wrapper\">{data.map((item: Level) => recursiveRender(item))}</div>;\n    //  return <div className=\"wrapper\">{props.data.map((item: LevelProps) => <OneLevel item={item} depth={}></OneLevel>)}</div>;\n};\n","import { CodePaper } from 'components/code-paper/CodePaper';\nimport React, { useState } from 'react';\nimport { Level, Levels } from './Levels';\n\nconst levels: Level[] = [\n    { name: 'Pipeline', route: 'pipeline' },\n    { name: 'Github', route: 'https://github.com/', static: true },\n    {\n        name: 'Ground',\n        route: 'ground',\n        deep: [\n            {\n                name: 'Solid',\n                route: 'solid',\n                deep: [\n                    { name: 'Dust', route: 'dust' },\n                    { name: 'Germ', route: 'germ' },\n                ],\n            },\n            { name: 'Liquid', route: 'liquid' },\n        ],\n    },\n];\n\nexport const LevelsDemo = () => {\n    const [levelData, setLevelData] = useState(levels);\n\n    const handleChange = (text: string) => {\n        try {\n            setLevelData(JSON.parse(text));\n        } catch {\n            console.error('error: INVALID JSON ARRAY FORMAT');\n        }\n    };\n    return (\n        <div className=\"demo-levels-wrapper\">\n            <h3>组件名称：层级导航（Levels）</h3>\n            <h4>(开发中)</h4>\n            <h4>示例</h4>\n            当前数据:\n            <CodePaper text={`${JSON.stringify(levels)}`} handleClick={handleChange} />\n            <Levels data={levelData}></Levels>\n        </div>\n    );\n};\n","import React from 'react'\nimport './index.scss'\n\n\nexport const Loading = (props: { handleClick?: () => void }) => {\n    return <span className=\"g-icon-rotate\" onClick={props.handleClick} />\n}\n\n","\nimport React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { RouteWithSubRoutes } from '../../App';\nimport './style.scss';\n\ninterface ICompProps {\n  routes: any[];\n}\n\nconst Component = ({ routes }: ICompProps) => {\n  return (\n    <div className=\"p-comp\">\n      <Switch>\n        {routes.map((route: any) => (\n          <RouteWithSubRoutes key={route.key} {...route} />\n        ))}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Component;","import { Avatar, Card, Col, Row, Statistic } from 'antd';\nimport { routeConfig } from 'config';\nimport React from 'react';\nimport img from '../../assets/image/panda.png';\nimport './style.scss';\n\nconst { Meta } = Card;\n\nconst Home = () => {\n    const hour = new Date().getHours();\n    let hello =\n        hour >= 12 && hour <= 17\n            ? '下午好, 记得多起来动动'\n            : hour >= 17 && hour <= 23\n            ? '晚上好, 要多多玩耍~'\n            : hour > 23 || hour < 5\n            ? '深夜了, 快休息吧'\n            : '早上好, 迎接一天最好的阳光';\n\n    return (\n        <div className=\"p-home\">\n            <h3> 组件平台 </h3>\n            <Row>\n                <Col span={20}>\n                    <Meta\n                        avatar={<Avatar style={{ marginTop: 5 }} size=\"large\" src={img} />}\n                        title={`${hello}`}\n                        description=\"组件目录在侧栏, 请选择查看\"\n                    />\n                </Col>\n                <Col style={{ marginTop: -13 }} span={4}>\n                    <Statistic title=\"当前组件总数\" value={routeConfig[1].routes?.length} />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Home;\n","// components\nimport { CodePaperDemo } from 'components/code-paper/demo/demo';\nimport { ImagePreviewDemo } from 'components/image-preview/demo/demo';\nimport { LevelsDemo } from 'components/levels/demo';\nimport { LoadingDemo } from 'components/loading/demo';\nimport Component from 'pages/Component';\nimport Home from '../pages/Home';\n\nexport interface IRouteSubs {\n    key: string;\n    title: string;\n    path: string;\n    icon?: string;\n    exact?: boolean;\n    component: React.ComponentType<any>;\n}\n\nexport interface IRouteConfigs {\n    key: string;\n    title: string;\n    path: string;\n    icon?: string;\n    exact?: boolean;\n    component: React.ComponentType<any>;\n    inMenu?: boolean;\n    hide?: boolean;\n    routes?: Array<IRouteSubs>;\n}\n\nexport const routeConfig: IRouteConfigs[] = [\n    {\n        key: 'home',\n        icon: 'home',\n        title: '首页',\n        exact: true,\n        component: Home,\n        inMenu: true,\n        path: '/',\n    },\n    {\n        key: 'comp',\n        icon: 'gold',\n        title: '组件',\n        inMenu: true,\n        component: Component,\n        path: '/comp',\n        routes: [\n            {\n                key: 'image-preview',\n                title: '图片预览 · ImagePreview',\n                component: ImagePreviewDemo,\n                path: '/comp/image-preview',\n            },\n            {\n                key: 'levels',\n                title: '阶级导航 · Levels',\n                component: LevelsDemo,\n                path: '/comp/levels',\n            },\n            {\n                key: 'code-paper',\n                title: '代码块 · CodePaper',\n                component: CodePaperDemo,\n                path: '/comp/code-paper',\n            },\n            {\n                key: 'loading',\n                title: '加载 · Loading',\n                component: LoadingDemo,\n                path: '/comp/loading',\n            },\n        ],\n    },\n];\n","import { message } from 'antd'\nimport React from 'react'\nimport { CodePaper } from '../CodePaper'\n\nexport const CodePaperDemo = () => {\n    const handleClick = (text: string) =>{\n        message.info(text)\n    }\n    return (\n        <div>\n            <h3>代码块</h3>\n            <CodePaper text='' handleClick={handleClick} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Loading } from '.';\n\nexport const LoadingDemo = () => {\n    return (\n        <div>\n            <Loading></Loading>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            NOTFOUND\n        </div>\n    )\n}\n","import { CheckCircleTwoTone, MenuFoldOutlined, MenuUnfoldOutlined, SettingTwoTone } from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { NavLink, Route, Switch, withRouter } from 'react-router-dom';\nimport './App.scss';\nimport { IRouteConfigs, routeConfig } from './config/index';\nimport { NotFound } from './pages/NotFound';\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\n/**\n * returns nested routes\n * @param {IRouteConfigs} route\n * @returns\n */\nexport function RouteWithSubRoutes(route: IRouteConfigs) {\n    return (\n        <Route\n            path={route.path}\n            render={props => (\n                // pass the sub-routes down to keep nesting\n                <route.component {...props} routes={route.routes} />\n            )}\n        />\n    );\n}\n\nconst App: React.FC = () => {\n    const [collapsed, setCollapsed] = useState(false);\n\n    const toggle = () => setCollapsed(!collapsed);\n\n    useEffect(() => {\n        let isMobile = /(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i.test(\n            navigator.userAgent,\n        );\n        setCollapsed(!!isMobile);\n    }, []);\n\n    const menuTitle = (routeItem: IRouteConfigs) => (\n        <span>\n            <SettingTwoTone />\n            <span>{routeItem.title}</span>\n        </span>\n    );\n\n    const renderItems = () => {\n        return routeConfig.map(routeItem => {\n            return routeItem.routes ? (\n                <SubMenu key={routeItem.key} title={menuTitle(routeItem)}>\n                    {routeItem.routes.map(subItem => (\n                        <Menu.Item key={subItem.key}>\n                            <NavLink to={subItem.path}>\n                                {subItem.icon && <CheckCircleTwoTone />}\n                                <span>{subItem.title}</span>\n                            </NavLink>\n                        </Menu.Item>\n                    ))}\n                </SubMenu>\n            ) : routeItem.component ? (\n                <Menu.Item key={routeItem.key}>\n                    <NavLink to={routeItem.path}>\n                        {routeItem.icon && <CheckCircleTwoTone />}\n                        <span>{routeItem.title}</span>\n                    </NavLink>\n                </Menu.Item>\n            ) : null;\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Sider width={250} trigger={null} reverseArrow collapsible collapsed={collapsed}>\n                    <div className=\"logo\">Gears 组件开发平台</div>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['home']} defaultOpenKeys={['comp']}>\n                        {renderItems()}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{ background: '#fff', padding: 0 }}>\n                        {collapsed ? (\n                            <MenuUnfoldOutlined onClick={toggle} className=\"trigger\" />\n                        ) : (\n                            <MenuFoldOutlined onClick={toggle} className=\"trigger\" />\n                        )}\n                        折叠\n                    </Header>\n                    <Content className=\"App-content\">\n                        <Switch>\n                            123\n                            {routeConfig.map(route => (\n                                <RouteWithSubRoutes key={route.key} {...route} />\n                            ))}\n                            <Route component={NotFound} />\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/panda.6c7f1359.png\";"],"sourceRoot":""}