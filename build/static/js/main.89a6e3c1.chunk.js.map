{"version":3,"sources":["components/code-paper/CodePaper.tsx","components/image-preview/ImagePreview.tsx","components/image-preview/demo.tsx","components/levels/OneLevel.tsx","components/levels/Levels.tsx","components/levels/demo.tsx","components/loading/index.tsx","pages/Component/index.tsx","pages/Home/index.tsx","config/index.ts","pages/Lib/index.tsx","components/code-paper/demo.tsx","components/loading/demo.tsx","pages/NotFound/index.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/image/panda.png"],"names":["CodePaper","props","textarea","useRef","className","ref","defaultValue","text","handleClick","onClick","current","value","buttonText","initImageState","w","h","r","s","l","t","centerX","centerY","wStatic","hStatic","rotateTime","everRotated","initContainerState","wMax","hMax","ImagePreview","url","useState","imageState","setImageState","containerState","setContainerState","container","image","disX","setDisX","disY","setDisY","draggable","setDraggable","style","overflow","position","width","height","maxHeight","maxWidth","onMouseMove","e","clientX","clientY","onselectstart","onMouseUp","cursor","left","top","transform","onLoad","node","window","innerWidth","innerHeight","wOrigin","naturalWidth","hOrigin","naturalHeight","wRatio","hRatio","size","state","updatedState","console","log","sizing","src","alt","onWheel","stopPropagation","scaleDelta","deltaY","rect","getBoundingClientRect","imageOffWindowLeft","imageOffWindowTop","imageWidth","imageHeight","lastLeft","lastTop","updateState","onMouseDown","preventDefault","persist","offsetLeft","offsetTop","OneLevel","level","depth","active","setActive","replaceRoute","location","replace","changeRoute","key","name","classNameGenerator","item","static","activeLevel","color","undefined","paddingLeft","Levels","data","fontSize","map","recursiveRender","lastUrl","deep","deepItem","levels","Loading","Component","routes","route","RouteWithSubRoutes","Meta","routeConfig","icon","title","exact","component","hour","Date","getHours","hello","span","avatar","marginTop","img","description","length","inMenu","path","show","setShow","webImageUrl","setWebImageUrl","onCancel","footer","visible","levelData","setLevelData","JSON","stringify","parse","error","message","info","NotFound","Header","Sider","Content","SubMenu","render","withRouter","collapsed","setCollapsed","menuTitle","routeItem","type","trigger","collapsible","theme","mode","defaultSelectedKeys","defaultOpenKeys","subItem","Item","to","background","padding","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.89a6e3c1.chunk.js","sourcesContent":["import { Button } from 'antd';\nimport React, { useRef } from 'react';\nimport './index.scss';\ninterface Props {\n    text: string;\n    buttonText?: string;\n    handleClick?: (text: string) => void;\n}\n\nexport const CodePaper = (props: Props) => {\n    const textarea = useRef<HTMLTextAreaElement>(null);\n    const updateChanges = () => {\n        const text = textarea.current!.value;\n        if (props.handleClick) {\n            props.handleClick(text);\n        }\n    };\n    return (\n        <div className=\"g-code-paper-wrapper\">\n            <textarea ref={textarea} defaultValue={props.text} />\n            {props.handleClick && <Button onClick={updateChanges}>{props.buttonText ? props.buttonText : '更新数据'}</Button>}\n        </div>\n    );\n};\n","import React, { useRef, useState } from 'react';\nimport './index.scss';\n\ninterface IProps {\n    url: string;\n}\n\nconst initImageState = {\n    w: 0, // width\n    h: 0, // height\n    r: 0, // rotate\n    s: 1, // scale\n    l: 0, // left\n    t: 0, // top\n    centerX: 0,\n    centerY: 0,\n    wStatic: 0,\n    hStatic: 0,\n    rotateTime: 0, // 旋转的次数\n    everRotated: false, // 之前是否经历过旋转\n};\n\nconst initContainerState = {\n    w: 0, // width\n    h: 0, // height\n    wMax: 0,\n    hMax: 0,\n};\n\nexport function ImagePreview(this: any, props: IProps) {\n    const { url } = props;\n\n    const [imageState, setImageState] = useState(initImageState);\n    const [containerState, setContainerState] = useState(initContainerState);\n\n    // 设定图片的预设大小\n    let container = useRef<HTMLDivElement>(null);\n    let image = useRef<HTMLImageElement>(null);\n\n    /* 初始化容器大小 */\n    const sizing = (node: HTMLImageElement) => {\n        const wMax = window.innerWidth * 0.9;\n        const hMax = window.innerHeight * 0.9 - 100; // 100为底部功能栏高度保留\n\n        const wOrigin = node.naturalWidth; // 初始的图片宽\n        const hOrigin = node.naturalHeight; // 初始的图片高度\n\n        const wRatio = wOrigin / wMax;\n        const hRatio = hOrigin / hMax;\n\n        const size =\n            wRatio < 1 && hRatio < 1\n                ? { w: wOrigin, h: hOrigin }\n                : wRatio > hRatio\n                ? { w: wMax, h: hOrigin / wRatio }\n                : { w: wOrigin / hRatio, h: hMax };\n\n        setImageState(state => {\n            const updatedState = { w: size.w, h: size.h, wStatic: size.w, hStatic: size.h };\n            console.log('图片元素更新状态', updatedState);\n            return { ...state, ...updatedState };\n        });\n\n        setContainerState(state => {\n            return { ...state, wMax, hMax, w: size.w, h: size.h };\n        });\n    };\n\n    const handleImageLoaded = () => {\n        if (image.current) {\n            sizing(image.current);\n        }\n    };\n\n    // 放大\n    const zoomIn = () => setImageState(state => ({ ...state, w: imageState.w * 1.05, h: imageState.h * 1.05 }));\n\n    // 缩小\n    const zoomOut = () => setImageState(state => ({ ...state, w: imageState.w * 0.95, h: imageState.h * 0.95 }));\n\n    // 顺时针旋转\n    const rotateClockwise = () => {\n        setImageState(s => {\n            const updateState = { ...s };\n            updateState.l = 0;\n            updateState.t = 0;\n            updateState.everRotated = true;\n            updateState.r = s.r + 90;\n            updateState.rotateTime = ++s.rotateTime;\n            return updateState;\n        });\n        setContainerState(s => {\n            const updatedState = { ...s };\n            // 宽图扩展高,长图扩展宽\n            const ratio = imageState.wStatic / imageState.hStatic;\n            ratio > 1 ? (updatedState.h = s.w) : (updatedState.w = s.h);\n            return updatedState;\n        });\n    };\n\n    /* 滚轮时缩放 */\n    const toScale = (e: any) => {\n        e.stopPropagation();\n        // 缩放差数\n        let scaleDelta = e.deltaY < 0 ? +0.05 : -0.05; // 放大*1.05/缩小*0.95\n        console.log('缩放比例', scaleDelta);\n        // 捕获元素盒子宽高属性\n        const rect = image.current!.getBoundingClientRect();\n        const imageOffWindowLeft = rect.left;\n        const imageOffWindowTop = rect.top;\n        let imageWidth = rect.width;\n        let imageHeight = rect.height;\n        console.log('图片对窗口左偏移量', rect.left, '光标对窗口左偏移量', e.clientX);\n        // 当图片是奇数次旋转时宽高对调\n        const needExchange = imageState.rotateTime % 2 === 1;\n        if (needExchange) {\n            [imageWidth, imageHeight] = [imageHeight, imageWidth];\n        }\n        // 缩放宽高\n        let w = imageWidth * (1 + scaleDelta);\n        let h = imageHeight * (1 + scaleDelta);\n        // 原有的偏移量\n        let lastLeft = imageState.l;\n        let lastTop = imageState.t;\n        /*\n         * 本行为目的:\n         * 之前经历过旋转,在下一次缩放时, 即刻调整其l,t参考点到旋转后的左上角,在计算其缩放后的偏移值\n         * 解释:翻转后,state内的l,t参考点仍是翻转前的左上角,css翻转不会改变state内参数\n         * 在此将参考点偏移到目前左上角, 计算最终图片l, t偏移量, 并且关闭everRotated\n         */\n        // if (needExchange && imageState.everRotated) {\n        //     const deltaW = Math.abs(0.5 * (rect.width - rect.height))\n        //     const deltaH = Math.abs(0.5 * (rect.height - rect.width))\n        //     if (imageWidth / imageHeight >= 1) {\n        //         // 超高图=>超宽图\n        //         lastTop += deltaH\n        //         lastLeft -= deltaW\n        //     } else {\n        //         // 超高图=>超宽图\n        //         lastTop -= deltaH\n        //         lastLeft += deltaW\n        //     }\n        // }\n        // 保持缩放坐标点与鼠标坐标点重合\n        let l = lastLeft - scaleDelta * (e.clientX - imageOffWindowLeft);\n        let t = lastTop - scaleDelta * (e.clientY - imageOffWindowTop);\n        setImageState(s => {\n            const updateState = { ...s, w, h, l, t, everRotated: false };\n            console.log('origin', s, 'current', updateState);\n            return updateState;\n        });\n    };\n\n    const [disX, setDisX] = useState(0);\n    const [disY, setDisY] = useState(0);\n    const [draggable, setDraggable] = useState(false);\n\n    // 拖拽开关\n    const drag = (e: any) => {\n        e.preventDefault();\n        e.persist();\n        console.log('drag');\n        setDraggable(true);\n        setDisX(e.clientX - image.current!.offsetLeft);\n        setDisY(e.clientY - image.current!.offsetTop);\n    };\n\n    // 拖拽移动\n    const startMove = function(e: any) {\n        if (draggable) {\n            let l = e.clientX - disX;\n            let t = e.clientY - disY;\n\n            setImageState(s => {\n                const updateState = { ...s, l, t };\n                return updateState;\n            });\n            container.current!.onselectstart = function() {\n                return false;\n            };\n        }\n    };\n\n    // 拖拽结束\n    const endMove = function(e: any) {\n        setDraggable(false);\n        container.current!.onselectstart = null;\n    };\n\n    const reset = function(e: any) {\n        setImageState(initImageState);\n        setContainerState(initContainerState);\n    };\n\n    // doesn't work\n    // const containerStyle = {\n    //     overflow: 'hidden',\n    //     position: 'relative',\n    //     width: `${containerState.w}px`,\n    //     height: `${containerState.h}px`,\n    //     maxHeight: `${containerState.hMax}px`,\n    //     maxWidth: `${containerState.wMax}px`,\n    // };\n\n    // doesn't work\n    // const imageStyle = {\n    //     cursor: ` move`,\n    //     position: ` absolute`,\n    //     left: ` ${imageState.l}px`,\n    //     top: ` ${imageState.t}px`,\n    //     width: ` ${imageState.w}px`,\n    //     height: ` ${imageState.h}px`,\n    //     transform: ` translate3d(0, 0, 0) rotate(${imageState.r}deg) scale(${imageState.s}, ${imageState.s})`,\n    // };\n\n    return (\n        <div className=\"g-image-preview-wrapper\">\n            <div\n                ref={container}\n                style={{\n                    overflow: 'hidden',\n                    position: 'relative',\n                    width: `${containerState.w}px`,\n                    height: `${containerState.h}px`,\n                    maxHeight: `${containerState.hMax}px`,\n                    maxWidth: `${containerState.wMax}px`,\n                }}\n                onMouseMove={startMove}\n                onMouseUp={endMove}\n            >\n                <img\n                    className=\"g-image-preview-image\"\n                    style={{\n                        cursor: `move`,\n                        position: `absolute`,\n                        left: `${imageState.l}px`,\n                        top: `${imageState.t}px`,\n                        width: `${imageState.w}px`,\n                        height: `${imageState.h}px`,\n                        transform: `translate3d(0, 0, 0) rotate(${imageState.r}deg) scale(${imageState.s}, ${imageState.s})`,\n                    }}\n                    onLoad={handleImageLoaded}\n                    ref={image}\n                    src={url}\n                    alt=\"图片\"\n                    onWheel={toScale}\n                    onMouseDown={drag}\n                />\n            </div>\n            <div className=\"g-image-preview-operation-bar\">\n                <i className=\"iconfont operator\" onClick={zoomIn}>\n                    +\n                </i>\n                <i className=\"iconfont operator\" onClick={zoomOut}>\n                    -\n                </i>\n                <i className=\"iconfont operator\" onClick={rotateClockwise}>\n                    ROTATE\n                </i>\n                <i className=\"iconfont operator\" onClick={reset}>\n                    RESET\n                </i>\n            </div>\n        </div>\n    );\n}\n","import { Modal } from 'antd';\nimport { CodePaper } from 'components/code-paper/CodePaper';\nimport React, { useState } from 'react';\nimport img from '../../assets/image/panda.png';\nimport './demo.scss';\nimport { ImagePreview } from './ImagePreview';\n\nexport const ImagePreviewDemo = () => {\n    const [show, setShow] = useState(false);\n\n    const [webImageUrl, setWebImageUrl] = useState('');\n    \n    const showDefaultModal = () => {\n        setWebImageUrl('');\n        setShow(true);\n    };\n\n    const showModal = (text: string) => {\n        console.log(text);\n        setWebImageUrl(text);\n        setShow(true);\n    };\n\n    // 关闭modal 复位图片\n    const closeModal = () => {\n        setShow(false);\n    };\n\n    return (\n        <div>\n            <h3>组件名称：图片预览（ImagePreview）</h3>\n            <h4>示例图片</h4>\n            <img src={img} alt=\"图片\" onClick={showDefaultModal}></img>\n            <h4>网络图片</h4>\n            <p>将想要测试图片地址输入(空白使用默认图片)</p>\n            <CodePaper text=\"\" handleClick={showModal} buttonText=\"显示预览\" />\n            <Modal className=\"preview-modal\" onCancel={closeModal} footer={null} visible={show}>\n                <h3>图片预览</h3>\n                <ImagePreview url={webImageUrl ? webImageUrl : img} />\n            </Modal>\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport './index.scss';\nimport { Level } from './Levels';\n\ninterface Props {\n    level: Level;\n    depth: number;\n    url: string;\n    fontSize: number;\n}\n\nexport const OneLevel = (props: Props) => {\n    const { level, depth, url } = props;\n    const [active, setActive] = useState(false);\n\n    const activeLevel = (item: Level, url: string) => {\n        setActive(true);\n        return item.static ? () => replaceRoute(url) : () => changeRoute(item.url);\n    };\n\n    const replaceRoute = (url: string) => window.location.replace(url);\n\n    const changeRoute = (url: string) => {};\n\n    const classNameGenerator = (depth: number) => {\n        return `g-levels-link ${depth ? 'g-small-font' : ''}`;\n    };\n\n    return (\n        <div\n            key={level.name}\n            className={classNameGenerator(depth)}\n            onClick={() => activeLevel(level, url)}\n            style={active ? { color: '#2dc6ad' } : undefined}\n        >\n            <span style={{ paddingLeft: `${depth}em` }}></span>\n            {level.name}\n        </div>\n    );\n};\n","import React from 'react';\nimport './index.scss';\nimport { OneLevel } from './OneLevel';\n\nexport type LevelProps = {\n    name: string;\n    url: string;\n};\n\n// 静态url-Level\ninterface StaticLevel extends LevelProps {\n    static: true;\n    deep?: null;\n}\n\n// 层级动态url-Level\ninterface LayerLevel extends LevelProps {\n    static?: false;\n    deep?: Level[];\n}\n\nexport type Level = StaticLevel | LayerLevel;\n\ninterface Props {\n    data: Level[];\n    fontSize?: number;\n}\n\nexport const Levels = (props: Props) => {\n    const { data, fontSize = 45 } = props;\n    // const [activeUrl, setActiveUrl] = useState('');\n\n    /**\n     * 递归渲染层级菜单\n     * @param {Level} item\n     * @param {number} [depth=0]\n     * @param {string} [lastUrl]\n     * @returns {React.ReactNode}\n     */\n    const recursiveRender = (item: Level, depth: number = 0, lastUrl?: string): React.ReactNode => {\n        const url = lastUrl ? `${lastUrl}/${item.url}` : item.url;\n        return (\n            <div key={item.name}>\n                <OneLevel level={item} depth={depth} url={url} fontSize={fontSize} />\n                {item.deep && item.deep.map((deepItem: Level) => recursiveRender(deepItem, depth + 1, item.url))}\n            </div>\n        );\n    };\n\n    return <div className=\"g-levels-wrapper\">{data.map((item: Level) => recursiveRender(item))}</div>;\n    //  return <div className=\"wrapper\">{props.data.map((item: LevelProps) => <OneLevel item={item} depth={}></OneLevel>)}</div>;\n};\n","import { CodePaper } from 'components/code-paper/CodePaper';\nimport React, { useState } from 'react';\nimport { Level, Levels } from './Levels';\n\nconst levels: Level[] = [\n    { name: 'Pipeline', url: 'pipeline' },\n    { name: 'Github', url: 'https://github.com/', static: true },\n    {\n        name: 'Ground',\n        url: 'ground',\n        deep: [\n            {\n                name: 'Solid',\n                url: 'solid',\n                deep: [\n                    { name: 'Dust', url: 'dust' },\n                    { name: 'Germ', url: 'germ' },\n                ],\n            },\n            { name: 'Liquid', url: 'liquid' },\n        ],\n    },\n];\n\nexport const LevelsDemo = () => {\n    const [levelData, setLevelData] = useState(levels);\n\n    const handleChange = (text: string) => {\n        try {\n            setLevelData(JSON.parse(text));\n        } catch {\n            console.error('error: INVALID JSON ARRAY FORMAT');\n        }\n    };\n    return (\n        <div className=\"demo-levels-wrapper\">\n            当前数据:\n            <CodePaper text={`${JSON.stringify(levels)}`} handleClick={handleChange} />\n            <Levels data={levelData}></Levels>\n        </div>\n    );\n};\n","import React from 'react'\nimport './index.scss'\n\n\nexport const Loading = (props: { handleClick?: () => void }) => {\n    return <span className=\"g-icon-rotate\" onClick={props.handleClick} />\n}\n\n","\nimport React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { RouteWithSubRoutes } from '../../App';\nimport './style.scss';\n\ninterface ICompProps {\n  routes: any[];\n}\n\nconst Component = ({ routes }: ICompProps) => {\n  return (\n    <div className=\"p-comp\">\n      <Switch>\n        {routes.map((route: any) => (\n          <RouteWithSubRoutes key={route.key} {...route} />\n        ))}\n      </Switch>\n    </div>\n  );\n};\n\nexport default Component;","import { Avatar, Card, Col, Row, Statistic } from 'antd';\nimport { routeConfig } from 'config';\nimport React from 'react';\nimport img from '../../assets/image/panda.png';\nimport './style.scss';\n\nconst { Meta } = Card;\n\nconst Home = () => {\n    const hour = new Date().getHours();\n    let hello = hour >= 12 && hour <= 17 ? '下午好' : hour >= 17 && hour <= 24 ? '晚上好' : '早上好';\n\n    return (\n        <div className=\"p-home\">\n            <h3> 组件平台 </h3>\n            <Row>\n                <Col span={20}>\n                    <Meta\n                        avatar={<Avatar style={{ marginTop: 5 }} size=\"large\" src={img} />}\n                        title={`${hello}`}\n                        description=\"组件目录在侧栏, 请选择查看\"\n                    />\n                </Col>\n                <Col style={{ marginTop: -13 }} span={4}>\n                    <Statistic title=\"当前组件总数\" value={routeConfig[1].routes?.length} />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Home;\n","// components\nimport { CodePaperDemo } from 'components/code-paper/demo';\nimport { ImagePreviewDemo } from 'components/image-preview/demo';\nimport { LevelsDemo } from 'components/levels/demo';\nimport { LoadingDemo } from 'components/loading/demo';\nimport Component from 'pages/Component';\nimport { Lib } from 'pages/Lib';\nimport Home from '../pages/Home';\n\nexport interface IRouteSubs {\n    key: string;\n    title: string;\n    path: string;\n    icon?: string;\n    exact?: boolean;\n    component: React.ComponentType<any>;\n}\n\nexport interface IRouteConfigs {\n    key: string;\n    title: string;\n    path: string;\n    icon?: string;\n    exact?: boolean;\n    component: React.ComponentType<any>;\n    inMenu?: boolean;\n    hide?: boolean;\n    routes?: Array<IRouteSubs>;\n}\n\nexport const routeConfig: IRouteConfigs[] = [\n    {\n        key: 'home',\n        icon: 'home',\n        title: '首页',\n        exact: true,\n        component: Home,\n        inMenu: true,\n        path: '/',\n    },\n    {\n        key: 'lib',\n        icon: 'gold',\n        title: '代码库',\n        exact: true,\n        component: Lib,\n        inMenu: true,\n        path: '/lib',\n    },\n    {\n        key: 'comp',\n        icon: 'gold',\n        title: '组件',\n        inMenu: true,\n        component: Component,\n        path: '/comp',\n        routes: [\n            {\n                key: 'image-preview',\n                title: '图片预览 · ImagePreview',\n                component: ImagePreviewDemo,\n                path: '/comp/image-preview',\n            },\n            {\n                key: 'levels',\n                title: '阶级导航 · Levels',\n                component: LevelsDemo,\n                path: '/comp/levels',\n            },\n            {\n                key: 'code-paper',\n                title: '代码块 · CodePaper',\n                component: CodePaperDemo,\n                path: '/comp/code-paper',\n            },\n            {\n                key: 'loading',\n                title: '加载 · Loading',\n                component: LoadingDemo,\n                path: '/comp/loading',\n            },\n        ],\n    },\n];\n","import { CodePaper } from 'components/code-paper/CodePaper'\nimport React from 'react'\nimport './index.scss'\nexport const Lib = () => {\n    return (\n        <div className=\"lib-wrapper\">\n            <CodePaper text=''></CodePaper>\n        </div>\n    )\n}\n","import { message } from 'antd'\nimport React from 'react'\nimport { CodePaper } from './CodePaper'\n\nexport const CodePaperDemo = () => {\n    const handleClick = (text: string) =>{\n        message.info(text)\n    }\n    return (\n        <div>\n            <h3>代码块</h3>\n            <CodePaper text='' handleClick={handleClick} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Loading } from '.';\n\nexport const LoadingDemo = () => {\n    return (\n        <div>\n            <Loading></Loading>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            NOTFOUND\n        </div>\n    )\n}\n","import { Icon, Layout, Menu } from 'antd';\nimport React, { useState } from 'react';\nimport { NavLink, Route, Switch, withRouter } from 'react-router-dom';\nimport './App.less';\nimport { IRouteConfigs, routeConfig } from './config/index';\nimport { NotFound } from './pages/NotFound';\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\n/**\n * returns nested routes\n * @param {IRouteConfigs} route\n * @returns\n */\nexport function RouteWithSubRoutes(route: IRouteConfigs) {\n    return (\n        <Route\n            path={route.path}\n            render={props => (\n                // pass the sub-routes down to keep nesting\n                <route.component {...props} routes={route.routes} />\n            )}\n        />\n    );\n}\n\nconst App: React.FC = () => {\n    const [collapsed, setCollapsed] = useState(false);\n    const toggle = () => setCollapsed(!collapsed);\n\n    const menuTitle = (routeItem: IRouteConfigs) => (\n        <span>\n            {routeItem.icon && <Icon type={routeItem.icon} />}\n            <span>{routeItem.title}</span>\n        </span>\n    );\n\n    const renderItems = () => {\n        return routeConfig.map(routeItem => {\n            return routeItem.routes ? (\n                <SubMenu key={routeItem.key} title={menuTitle(routeItem)}>\n                    {routeItem.routes.map(subItem => (\n                        <Menu.Item key={subItem.key}>\n                            <NavLink to={subItem.path}>\n                                {subItem.icon && <Icon type={subItem.icon} />}\n                                <span>{subItem.title}</span>\n                            </NavLink>\n                        </Menu.Item>\n                    ))}\n                </SubMenu>\n            ) : routeItem.component ? (\n                <Menu.Item key={routeItem.key}>\n                    <NavLink to={routeItem.path}>\n                        {routeItem.icon && <Icon type={routeItem.icon} />}\n                        <span>{routeItem.title}</span>\n                    </NavLink>\n                </Menu.Item>\n            ) : null;\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={collapsed}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['home']} defaultOpenKeys={['comp']}>\n                        {renderItems()}\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{ background: '#fff', padding: 0 }}>\n                        <Icon className=\"trigger\" type={collapsed ? 'menu-unfold' : 'menu-fold'} onClick={toggle} />\n                    </Header>\n                    <Content className=\"App-content\">\n                        <Switch>\n                            123\n                            {routeConfig.map(route => (\n                                <RouteWithSubRoutes key={route.key} {...route} />\n                            ))}\n                            <Route component={NotFound} />\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </div>\n    );\n};\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/panda.6c7f1359.png\";"],"sourceRoot":""}